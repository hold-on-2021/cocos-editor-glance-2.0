"use strict";const r=require("aggregate-error");module.exports=(async(e,t,{concurrency:o=1/0,stopOnError:n=!0}={})=>new Promise((c,i)=>{if("function"!=typeof t)throw new TypeError("Mapper function is required");if(!("number"==typeof o&&o>=1))throw new TypeError(`Expected \`concurrency\` to be a number from 1 and up, got \`${o}\` (${typeof o})`);const u=[],a=[],s=e[Symbol.iterator]();let p=!1,f=!1,y=0,w=0;const d=()=>{if(p)return;const e=s.next(),o=w;if(w++,e.done)return f=!0,0===y&&(n||0===a.length?c(u):i(new r(a))),void 0;y++,(async()=>{try{const r=await e.value;u[o]=await t(r,o),y--,d()}catch(r){n?(p=!0,i(r)):(a.push(r),y--,d())}})()};for(let r=0;r<o&&(d(),!f);r++);}));