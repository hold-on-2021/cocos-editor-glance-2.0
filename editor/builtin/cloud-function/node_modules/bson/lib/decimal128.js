"use strict";let r=require("./long");const e=require("buffer").Buffer,t=/^(\+|-)?(\d+|(\d*\.\d*))?(E|e)?([-+])?(\d+)?$/,i=/^(\+|-)?(Infinity|inf)$/i,o=/^(\+|-)?NaN$/i,n=[124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0].reverse(),f=[248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0].reverse(),h=[120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0].reverse(),s=/^([-+])?(\d+)?$/;function l(r){return!isNaN(parseInt(r,10))}function m(e){const t=r.fromNumber(1e9);let i=r.fromNumber(0);if(!(e.parts[0]||e.parts[1]||e.parts[2]||e.parts[3]))return{quotient:e,rem:i};for(let o=0;o<=3;o++)i=(i=i.shiftLeft(32)).add(new r(e.parts[o],0)),e.parts[o]=i.div(t).low,i=i.modulo(t);return{quotient:e,rem:i}}function u(r,e){throw new TypeError(`"${r}" is not a valid Decimal128 string - ${e}`)}function a(r){this.bytes=r}a.fromString=function(m){let g=!1,p=!1,w=!1,d=0,b=0,c=0,N=0,y=0;const v=[0];let E=0,$=0,S=0,L=0,x=0,D=0,I=[0,0],R=[0,0],j=0,q=0;if(m.length>=7e3)throw new TypeError(m+" not a valid Decimal128 string");const U=m.match(t),B=m.match(i),O=m.match(o);if(!U&&!B&&!O||0===m.length)throw new TypeError(m+" not a valid Decimal128 string");if(U){let r=U[2],e=U[4],t=U[5],i=U[6];e&&void 0===i&&u(m,"missing exponent power"),e&&void 0===r&&u(m,"missing exponent base"),void 0===e&&(t||i)&&u(m,"missing e before exponent")}if("+"!==m[q]&&"-"!==m[q]||(g="-"===m[q++]),!l(m[q])&&"."!==m[q]){if("i"===m[q]||"I"===m[q])return new a(e.from(g?f:h));if("N"===m[q])return new a(e.from(n))}for(;l(m[q])||"."===m[q];)"."!==m[q]?(E<34&&("0"!==m[q]||w)&&(w||(y=b),w=!0,v[$++]=parseInt(m[q],10),E+=1),w&&(c+=1),p&&(N+=1),b+=1,q+=1):(p&&u(m,"contains multiple periods"),p=!0,q+=1);if(p&&!b)throw new TypeError(m+" not a valid Decimal128 string");if("e"===m[q]||"E"===m[q]){const r=m.substr(++q).match(s);if(!r||!r[2])return new a(e.from(n));x=parseInt(r[0],10),q+=r[0].length}if(m[q])return new a(e.from(n));if(S=0,E){if(L=E-1,1!==(d=c))for(;"0"===m[y+d-1];)d-=1}else S=0,L=0,v[0]=0,c=1,E=1,d=0;for(x<=N&&N-x>16384?x=-6176:x-=N;x>6111;){if((L+=1)-S>34){if(v.join("").match(/^0+$/)){x=6111;break}u(m,"overflow")}x-=1}for(;x<-6176||E<c;){if(0===L&&d<E){x=-6176,d=0;break}if(E<c?c-=1:L-=1,x<6111)x+=1;else{if(v.join("").match(/^0+$/)){x=6111;break}u(m,"overflow")}}if(L-S+1<d){let r=b;p&&(y+=1,r+=1),g&&(y+=1,r+=1);const t=parseInt(m[y+L+1],10);let i=0;if(t>=5&&(i=1,5===t))for(i=v[L]%2==1,D=y+L+2;D<r;D++)if(parseInt(m[D],10)){i=1;break}if(i){let r=L;for(;r>=0;r--)if(++v[r]>9&&(v[r]=0,0===r)){if(!(x<6111))return new a(e.from(g?f:h));x+=1,v[r]=1}}}if(I=r.fromNumber(0),R=r.fromNumber(0),0===d)I=r.fromNumber(0),R=r.fromNumber(0);else if(L-S<17){let e=S;for(R=r.fromNumber(v[e++]),I=new r(0,0);e<=L;e++)R=(R=R.multiply(r.fromNumber(10))).add(r.fromNumber(v[e]))}else{let e=S;for(I=r.fromNumber(v[e++]);e<=L-17;e++)I=(I=I.multiply(r.fromNumber(10))).add(r.fromNumber(v[e]));for(R=r.fromNumber(v[e++]);e<=L;e++)R=(R=R.multiply(r.fromNumber(10))).add(r.fromNumber(v[e]))}const T=function(e,t){if(!e&&!t)return{high:r.fromNumber(0),low:r.fromNumber(0)};const i=e.shiftRightUnsigned(32),o=new r(e.getLowBits(),0),n=t.shiftRightUnsigned(32),f=new r(t.getLowBits(),0);let h=i.multiply(n),s=i.multiply(f),l=o.multiply(n),m=o.multiply(f);return h=h.add(s.shiftRightUnsigned(32)),s=new r(s.getLowBits(),0).add(l).add(m.shiftRightUnsigned(32)),{high:h=h.add(s.shiftRightUnsigned(32)),low:m=s.shiftLeft(32).add(new r(m.getLowBits(),0))}}(I,r.fromString("100000000000000000"));T.low=T.low.add(R),function(r,e){const t=r.high>>>0,i=e.high>>>0;if(t<i)return!0;if(t===i&&r.low>>>0<e.low>>>0)return!0;return!1}(T.low,R)&&(T.high=T.high.add(r.fromNumber(1))),j=x+6176;const k={low:r.fromNumber(0),high:r.fromNumber(0)};T.high.shiftRightUnsigned(49).and(r.fromNumber(1)).equals(r.fromNumber(1))?(k.high=k.high.or(r.fromNumber(3).shiftLeft(61)),k.high=k.high.or(r.fromNumber(j).and(r.fromNumber(16383).shiftLeft(47))),k.high=k.high.or(T.high.and(r.fromNumber(0x7fffffffffff)))):(k.high=k.high.or(r.fromNumber(16383&j).shiftLeft(49)),k.high=k.high.or(T.high.and(r.fromNumber(562949953421311)))),k.low=T.low,g&&(k.high=k.high.or(r.fromString("9223372036854775808")));const J=e.alloc(16);return q=0,J[q++]=255&k.low.low,J[q++]=k.low.low>>8&255,J[q++]=k.low.low>>16&255,J[q++]=k.low.low>>24&255,J[q++]=255&k.low.high,J[q++]=k.low.high>>8&255,J[q++]=k.low.high>>16&255,J[q++]=k.low.high>>24&255,J[q++]=255&k.high.low,J[q++]=k.high.low>>8&255,J[q++]=k.high.low>>16&255,J[q++]=k.high.low>>24&255,J[q++]=255&k.high.high,J[q++]=k.high.high>>8&255,J[q++]=k.high.high>>16&255,J[q++]=k.high.high>>24&255,new a(J)};a.prototype.toString=function(){let e,t,i,o,n,f,h=0;const s=new Array(36);for(let r=0;r<s.length;r++)s[r]=0;let l,u,a,g,p,w=0,d=!1,b={parts:new Array(4)};const c=[];w=0;const N=this.bytes;if(o=N[w++]|N[w++]<<8|N[w++]<<16|N[w++]<<24,i=N[w++]|N[w++]<<8|N[w++]<<16|N[w++]<<24,t=N[w++]|N[w++]<<8|N[w++]<<16|N[w++]<<24,e=N[w++]|N[w++]<<8|N[w++]<<16|N[w++]<<24,w=0,{low:new r(o,i),high:new r(t,e)}.high.lessThan(r.ZERO)&&c.push("-"),(n=e>>26&31)>>3==3){if(30===n)return c.join("")+"Infinity";if(31===n)return"NaN";f=e>>15&16383,a=8+(e>>14&1)}else a=e>>14&7,f=e>>17&16383;if(l=f-6176,b.parts[0]=(16383&e)+((15&a)<<14),b.parts[1]=t,b.parts[2]=i,b.parts[3]=o,0===b.parts[0]&&0===b.parts[1]&&0===b.parts[2]&&0===b.parts[3])d=!0;else for(p=3;p>=0;p--){let r=0,e=m(b);if(b=e.quotient,r=e.rem.low)for(g=8;g>=0;g--)s[9*p+g]=r%10,r=Math.floor(r/10)}if(d)h=1,s[w]=0;else for(h=36;!s[w];)h-=1,w+=1;if((u=h-1+l)>=34||u<=-7||l>0){if(h>34)return c.push(0),l>0?c.push("E+"+l):l<0&&c.push("E"+l),c.join("");c.push(s[w++]),(h-=1)&&c.push(".");for(let r=0;r<h;r++)c.push(s[w++]);c.push("E"),u>0?c.push("+"+u):c.push(u)}else if(l>=0)for(let r=0;r<h;r++)c.push(s[w++]);else{let r=h+l;if(r>0)for(let e=0;e<r;e++)c.push(s[w++]);else c.push("0");for(c.push(".");r++<0;)c.push("0");for(let e=0;e<h-Math.max(r-1,0);e++)c.push(s[w++])}return c.join("")},a.prototype.toJSON=function(){return{$numberDecimal:this.toString()}},a.prototype.toExtendedJSON=function(){return{$numberDecimal:this.toString()}},a.fromExtendedJSON=function(r){return a.fromString(r.$numberDecimal)},Object.defineProperty(a.prototype,"_bsontype",{value:"Decimal128"}),module.exports=a;