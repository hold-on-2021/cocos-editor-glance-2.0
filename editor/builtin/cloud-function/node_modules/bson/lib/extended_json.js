"use strict";const e=require("./long"),t=require("./double"),r=require("./timestamp"),n=require("./objectid"),i=require("./regexp"),o=require("./symbol"),l=require("./int_32"),u=require("./code"),s=require("./decimal128"),f=require("./min_key"),a=require("./max_key"),c=require("./db_ref"),d=require("./binary"),b={$oid:n,$binary:d,$symbol:o,$numberInt:l,$numberDecimal:s,$numberDouble:t,$numberLong:e,$minKey:f,$maxKey:a,$regex:i,$regularExpression:i,$timestamp:r};function y(r,n){return"boolean"==typeof(n=Object.assign({},{relaxed:!0,legacy:!1},n)).relaxed&&(n.strict=!n.relaxed),"boolean"==typeof n.strict&&(n.relaxed=!n.strict),JSON.parse(r,(r,i)=>(function r(n,i,o,s){if("number"==typeof o){if(s.relaxed||s.legacy)return o;if(Math.floor(o)===o){if(o>=g&&o<=m)return new l(o);if(o>=$&&o<=p)return new e.fromNumber(o)}return new t(o)}if(null==o||"object"!=typeof o)return o;if(o.$undefined)return null;const f=Object.keys(o).filter(e=>e.startsWith("$")&&null!=o[e]);for(let e=0;e<f.length;e++){let t=b[f[e]];if(t)return t.fromExtendedJSON(o,s)}if(null!=o.$date){const t=o.$date,r=new Date;return s.legacy?"number"==typeof t?r.setTime(t):"string"==typeof t&&r.setTime(Date.parse(t)):"string"==typeof t?r.setTime(Date.parse(t)):e.isLong(t)?r.setTime(t.toNumber()):"number"==typeof t&&s.relaxed&&r.setTime(t),r}if(null!=o.$code){let e=Object.assign({},o);return o.$scope&&(e.$scope=r(n,null,o.$scope)),u.fromExtendedJSON(o)}if(null!=o.$ref||null!=o.$dbPointer){let e=o.$ref?o:o.$dbPointer;if(e instanceof c)return e;let t=!0;if(Object.keys(e).filter(e=>e.startsWith("$")).forEach(e=>{-1===["$ref","$id","$db"].indexOf(e)&&(t=!1)}),t)return c.fromExtendedJSON(e)}return o})(this,0,i,n))}const m=2147483647,g=-2147483648,p=0x8000000000000000,$=-0x8000000000000000;function w(e,t,r,n){null!=r&&"object"==typeof r&&(n=r,r=0),null==t||"object"!=typeof t||Array.isArray(t)||(n=t,t=null,r=0),n=Object.assign({},{relaxed:!0,legacy:!1},n);const i=Array.isArray(e)?x(e,n):j(e,n);return JSON.stringify(i,t,r)}function x(e,t){return e.map(e=>S(e,t))}function O(e){const t=e.toISOString();return 0!==e.getUTCMilliseconds()?t:t.slice(0,-5)+"Z"}function S(e,t){if(Array.isArray(e))return x(e,t);if(void 0===e)return null;if(e instanceof Date){let r=e.getTime(),n=r>-1&&r<2534023188e5;return t.legacy?t.relaxed&&n?{$date:e.getTime()}:{$date:O(e)}:t.relaxed&&n?{$date:O(e)}:{$date:{$numberLong:e.getTime().toString()}}}if("number"==typeof e&&!t.relaxed){if(Math.floor(e)===e){let t=e>=$&&e<=p;if(e>=g&&e<=m)return{$numberInt:e.toString()};if(t)return{$numberLong:e.toString()}}return{$numberDouble:e.toString()}}if(e instanceof RegExp){let r=e.flags;return void 0===r&&(r=e.toString().match(/[gimuy]*$/)[0]),new i(e.source,r).toExtendedJSON(t)}return null!=e&&"object"==typeof e?j(e,t):e}const h={Binary:e=>new d(e.value(),e.subtype),Code:e=>new u(e.code,e.scope),DBRef:e=>new c(e.collection||e.namespace,e.oid,e.db,e.fields),Decimal128:e=>new s(e.bytes),Double:e=>new t(e.value),Int32:e=>new l(e.value),Long:t=>e.fromBits(null!=t.low?t.low:t.low_,null!=t.low?t.high:t.high_,null!=t.low?t.unsigned:t.unsigned_),MaxKey:()=>new a,MinKey:()=>new f,ObjectID:e=>new n(e),ObjectId:e=>new n(e),BSONRegExp:e=>new i(e.pattern,e.options),Symbol:e=>new o(e.value),Timestamp:e=>r.fromBits(e.low,e.high)};function j(e,t){if(null==e||"object"!=typeof e)throw new Error("not an object instance");const r=e._bsontype;if(void 0===r){const r={};for(let n in e)r[n]=S(e[n],t);return r}if("string"==typeof r){let n=e;if("function"!=typeof n.toExtendedJSON){const e=h[r];if(!e)throw new TypeError("Unrecognized or invalid _bsontype: "+r);n=e(n)}return"Code"===r&&n.scope?n=new u(n.code,S(n.scope,t)):"DBRef"===r&&n.oid&&(n=new c(n.collection,S(n.oid,t),n.db,n.fields)),n.toExtendedJSON(t)}throw new Error("_bsontype must be a string, but was: "+typeof r)}module.exports={parse:y,deserialize:function(e,t){return t=t||{},y(JSON.stringify(e),t)},serialize:function(e,t){return t=t||{},JSON.parse(w(e,t))},stringify:w};