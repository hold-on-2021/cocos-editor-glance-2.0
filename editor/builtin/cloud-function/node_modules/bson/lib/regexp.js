"use strict";class t{constructor(t,o){this.pattern=t||"",this.options=o?function(t){return t.split("").sort().join("")}(o):"";for(let t=0;t<this.options.length;t++)if("i"!==this.options[t]&&"m"!==this.options[t]&&"x"!==this.options[t]&&"l"!==this.options[t]&&"s"!==this.options[t]&&"u"!==this.options[t])throw new Error(`The regular expression option [${this.options[t]}] is not supported`)}static parseOptions(t){return t?t.split("").sort().join(""):""}toExtendedJSON(t){return(t=t||{}).legacy?{$regex:this.pattern,$options:this.options}:{$regularExpression:{pattern:this.pattern,options:this.options}}}static fromExtendedJSON(o){return o.$regex?"BSONRegExp"===o.$regex._bsontype?o:new t(o.$regex,t.parseOptions(o.$options)):new t(o.$regularExpression.pattern,t.parseOptions(o.$regularExpression.options))}}Object.defineProperty(t.prototype,"_bsontype",{value:"BSONRegExp"}),module.exports=t;