"use strict";const e=require("buffer").Buffer,_=require("./map"),A=require("./long"),N=require("./double"),B=require("./timestamp"),r=require("./objectid"),S=require("./regexp"),n=require("./symbol"),i=require("./int_32"),O=require("./code"),T=require("./decimal128"),D=require("./min_key"),o=require("./max_key"),t=require("./db_ref"),I=require("./binary"),E=require("./constants"),u=require("./extended_json"),l=require("./parser/deserializer"),a=require("./parser/serializer"),c=require("./parser/calculate_size"),s=require("./ensure_buffer"),f=17825792;let Y=e.alloc(f);module.exports={BSON_INT32_MAX:E.BSON_INT32_MAX,BSON_INT32_MIN:E.BSON_INT32_MIN,BSON_INT64_MAX:E.BSON_INT64_MAX,BSON_INT64_MIN:E.BSON_INT64_MIN,JS_INT_MAX:E.JS_INT_MAX,JS_INT_MIN:E.JS_INT_MIN,BSON_DATA_NUMBER:E.BSON_DATA_NUMBER,BSON_DATA_STRING:E.BSON_DATA_STRING,BSON_DATA_OBJECT:E.BSON_DATA_OBJECT,BSON_DATA_ARRAY:E.BSON_DATA_ARRAY,BSON_DATA_BINARY:E.BSON_DATA_BINARY,BSON_DATA_UNDEFINED:E.BSON_DATA_UNDEFINED,BSON_DATA_OID:E.BSON_DATA_OID,BSON_DATA_BOOLEAN:E.BSON_DATA_BOOLEAN,BSON_DATA_DATE:E.BSON_DATA_DATE,BSON_DATA_NULL:E.BSON_DATA_NULL,BSON_DATA_REGEXP:E.BSON_DATA_REGEXP,BSON_DATA_DBPOINTER:E.BSON_DATA_DBPOINTER,BSON_DATA_CODE:E.BSON_DATA_CODE,BSON_DATA_SYMBOL:E.BSON_DATA_SYMBOL,BSON_DATA_CODE_W_SCOPE:E.BSON_DATA_CODE_W_SCOPE,BSON_DATA_INT:E.BSON_DATA_INT,BSON_DATA_TIMESTAMP:E.BSON_DATA_TIMESTAMP,BSON_DATA_LONG:E.BSON_DATA_LONG,BSON_DATA_DECIMAL128:E.BSON_DATA_DECIMAL128,BSON_DATA_MIN_KEY:E.BSON_DATA_MIN_KEY,BSON_DATA_MAX_KEY:E.BSON_DATA_MAX_KEY,BSON_BINARY_SUBTYPE_DEFAULT:E.BSON_BINARY_SUBTYPE_DEFAULT,BSON_BINARY_SUBTYPE_FUNCTION:E.BSON_BINARY_SUBTYPE_FUNCTION,BSON_BINARY_SUBTYPE_BYTE_ARRAY:E.BSON_BINARY_SUBTYPE_BYTE_ARRAY,BSON_BINARY_SUBTYPE_UUID:E.BSON_BINARY_SUBTYPE_UUID,BSON_BINARY_SUBTYPE_MD5:E.BSON_BINARY_SUBTYPE_MD5,BSON_BINARY_SUBTYPE_USER_DEFINED:E.BSON_BINARY_SUBTYPE_USER_DEFINED,Code:O,Map:_,BSONSymbol:n,DBRef:t,Binary:I,ObjectId:r,Long:A,Timestamp:B,Double:N,Int32:i,MinKey:D,MaxKey:o,BSONRegExp:S,Decimal128:T,serialize:function(_,A){const N="boolean"==typeof(A=A||{}).checkKeys&&A.checkKeys,B="boolean"==typeof A.serializeFunctions&&A.serializeFunctions,r="boolean"!=typeof A.ignoreUndefined||A.ignoreUndefined,S="number"==typeof A.minInternalBufferSize?A.minInternalBufferSize:f;Y.length<S&&(Y=e.alloc(S));const n=a(Y,_,N,0,0,B,r,[]),i=e.alloc(n);return Y.copy(i,0,0,i.length),i},serializeWithBufferAndIndex:function(e,_,A){const N="boolean"==typeof(A=A||{}).checkKeys&&A.checkKeys,B="boolean"==typeof A.serializeFunctions&&A.serializeFunctions,r="boolean"!=typeof A.ignoreUndefined||A.ignoreUndefined,S="number"==typeof A.index?A.index:0,n=a(Y,e,N,0,0,B,r);return Y.copy(_,S,0,n),S+n-1},deserialize:function(e,_){return e=s(e),l(e,_)},calculateObjectSize:function(e,_){const A="boolean"==typeof(_=_||{}).serializeFunctions&&_.serializeFunctions,N="boolean"!=typeof _.ignoreUndefined||_.ignoreUndefined;return c(e,A,N)},deserializeStream:function(e,_,A,N,B,r){r=Object.assign({allowObjectSmallerThanBufferSize:!0},r),e=s(e);let S=_;for(let _=0;_<A;_++){const A=e[S]|e[S+1]<<8|e[S+2]<<16|e[S+3]<<24;r.index=S,N[B+_]=l(e,r),S+=A}return S},setInternalBufferSize:function(_){Y.length<_&&(Y=e.alloc(_))},ObjectID:r,EJSON:u};