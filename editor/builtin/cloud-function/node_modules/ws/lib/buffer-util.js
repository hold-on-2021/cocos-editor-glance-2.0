"use strict";const{EMPTY_BUFFER:e}=require("./constants");function t(t,f){if(0===t.length)return e;if(1===t.length)return t[0];const r=Buffer.allocUnsafe(f);let n=0;for(let e=0;e<t.length;e++){const f=t[e];r.set(f,n),n+=f.length}return n<f?r.slice(0,n):r}function f(e,t,f,r,n){for(let u=0;u<n;u++)f[r+u]=e[u]^t[3&u]}function r(e,t){const f=e.length;for(let r=0;r<f;r++)e[r]^=t[3&r]}function n(e){return e.byteLength===e.buffer.byteLength?e.buffer:e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}function u(e){if(u.readOnly=!0,Buffer.isBuffer(e))return e;let t;return e instanceof ArrayBuffer?t=Buffer.from(e):ArrayBuffer.isView(e)?t=function(e){const t=Buffer.from(e.buffer);if(e.byteLength!==e.buffer.byteLength)return t.slice(e.byteOffset,e.byteOffset+e.byteLength);return t}(e):(t=Buffer.from(e),u.readOnly=!1),t}try{const e=require("bufferutil"),o=e.BufferUtil||e;module.exports={concat:t,mask(e,t,r,n,u){u<48?f(e,t,r,n,u):o.mask(e,t,r,n,u)},toArrayBuffer:n,toBuffer:u,unmask(e,t){e.length<32?r(e,t):o.unmask(e,t)}}}catch(e){module.exports={concat:t,mask:f,toArrayBuffer:n,toBuffer:u,unmask:r}}