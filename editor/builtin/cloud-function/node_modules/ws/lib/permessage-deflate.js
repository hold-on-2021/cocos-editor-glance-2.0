"use strict";const e=require("zlib"),t=require("./buffer-util"),i=require("./limiter"),{kStatusCode:s,NOOP:n}=require("./constants"),o=Buffer.from([0,0,255,255]),r=Symbol("permessage-deflate"),a=Symbol("total-length"),l=Symbol("callback"),_=Symbol("buffers"),h=Symbol("error");let c;function f(e){this[_].push(e),this[a]+=e.length}function d(e){if(this[a]+=e.length,this[r]._maxPayload<1||this[a]<=this[r]._maxPayload)return this[_].push(e),void 0;this[h]=new RangeError("Max payload size exceeded"),this[h][s]=1009,this.removeListener("data",d),this.reset()}function w(e){this[r]._inflate=null,e[s]=1007,this[l](e)}module.exports=class{constructor(e,t,s){if(this._maxPayload=0|s,this._options=e||{},this._threshold=void 0!==this._options.threshold?this._options.threshold:1024,this._isServer=!!t,this._deflate=null,this._inflate=null,this.params=null,!c){const e=void 0!==this._options.concurrencyLimit?this._options.concurrencyLimit:10;c=new i(e)}}static get extensionName(){return"permessage-deflate"}offer(){const e={};return this._options.serverNoContextTakeover&&(e.server_no_context_takeover=!0),this._options.clientNoContextTakeover&&(e.client_no_context_takeover=!0),this._options.serverMaxWindowBits&&(e.server_max_window_bits=this._options.serverMaxWindowBits),this._options.clientMaxWindowBits?e.client_max_window_bits=this._options.clientMaxWindowBits:null==this._options.clientMaxWindowBits&&(e.client_max_window_bits=!0),e}accept(e){return e=this.normalizeParams(e),this.params=this._isServer?this.acceptAsServer(e):this.acceptAsClient(e),this.params}cleanup(){if(this._inflate&&(this._inflate.close(),this._inflate=null),this._deflate){const e=this._deflate[l];this._deflate.close(),this._deflate=null,e&&e(new Error("The deflate stream was closed while data was being processed"))}}acceptAsServer(e){const t=this._options,i=e.find(e=>!(!1===t.serverNoContextTakeover&&e.server_no_context_takeover||e.server_max_window_bits&&(!1===t.serverMaxWindowBits||"number"==typeof t.serverMaxWindowBits&&t.serverMaxWindowBits>e.server_max_window_bits)||"number"==typeof t.clientMaxWindowBits&&!e.client_max_window_bits));if(!i)throw new Error("None of the extension offers can be accepted");return t.serverNoContextTakeover&&(i.server_no_context_takeover=!0),t.clientNoContextTakeover&&(i.client_no_context_takeover=!0),"number"==typeof t.serverMaxWindowBits&&(i.server_max_window_bits=t.serverMaxWindowBits),"number"==typeof t.clientMaxWindowBits?i.client_max_window_bits=t.clientMaxWindowBits:!0!==i.client_max_window_bits&&!1!==t.clientMaxWindowBits||delete i.client_max_window_bits,i}acceptAsClient(e){const t=e[0];if(!1===this._options.clientNoContextTakeover&&t.client_no_context_takeover)throw new Error('Unexpected parameter "client_no_context_takeover"');if(t.client_max_window_bits){if(!1===this._options.clientMaxWindowBits||"number"==typeof this._options.clientMaxWindowBits&&t.client_max_window_bits>this._options.clientMaxWindowBits)throw new Error('Unexpected or invalid parameter "client_max_window_bits"')}else"number"==typeof this._options.clientMaxWindowBits&&(t.client_max_window_bits=this._options.clientMaxWindowBits);return t}normalizeParams(e){return e.forEach(e=>{Object.keys(e).forEach(t=>{let i=e[t];if(i.length>1)throw new Error(`Parameter "${t}" must have only a single value`);if(i=i[0],"client_max_window_bits"===t){if(!0!==i){const e=+i;if(!Number.isInteger(e)||e<8||e>15)throw new TypeError(`Invalid value for parameter "${t}": ${i}`);i=e}else if(!this._isServer)throw new TypeError(`Invalid value for parameter "${t}": ${i}`)}else if("server_max_window_bits"===t){const e=+i;if(!Number.isInteger(e)||e<8||e>15)throw new TypeError(`Invalid value for parameter "${t}": ${i}`);i=e}else{if("client_no_context_takeover"!==t&&"server_no_context_takeover"!==t)throw new Error(`Unknown parameter "${t}"`);if(!0!==i)throw new TypeError(`Invalid value for parameter "${t}": ${i}`)}e[t]=i})}),e}decompress(e,t,i){c.add(s=>{this._decompress(e,t,(e,t)=>{s(),i(e,t)})})}compress(e,t,i){c.add(s=>{this._compress(e,t,(e,t)=>{s(),i(e,t)})})}_decompress(i,s,n){const c=this._isServer?"client":"server";if(!this._inflate){const t=`${c}_max_window_bits`,i="number"!=typeof this.params[t]?e.Z_DEFAULT_WINDOWBITS:this.params[t];this._inflate=e.createInflateRaw({...this._options.zlibInflateOptions,windowBits:i}),this._inflate[r]=this,this._inflate[a]=0,this._inflate[_]=[],this._inflate.on("error",w),this._inflate.on("data",d)}this._inflate[l]=n,this._inflate.write(i),s&&this._inflate.write(o),this._inflate.flush(()=>{const e=this._inflate[h];if(e)return this._inflate.close(),this._inflate=null,n(e),void 0;const i=t.concat(this._inflate[_],this._inflate[a]);s&&this.params[`${c}_no_context_takeover`]?(this._inflate.close(),this._inflate=null):(this._inflate[a]=0,this._inflate[_]=[]),n(null,i)})}_compress(i,s,o){const r=this._isServer?"server":"client";if(!this._deflate){const t=`${r}_max_window_bits`,i="number"!=typeof this.params[t]?e.Z_DEFAULT_WINDOWBITS:this.params[t];this._deflate=e.createDeflateRaw({...this._options.zlibDeflateOptions,windowBits:i}),this._deflate[a]=0,this._deflate[_]=[],this._deflate.on("error",n),this._deflate.on("data",f)}this._deflate[l]=o,this._deflate.write(i),this._deflate.flush(e.Z_SYNC_FLUSH,()=>{if(!this._deflate)return;let e=t.concat(this._deflate[_],this._deflate[a]);s&&(e=e.slice(0,e.length-4)),this._deflate[l]=null,s&&this.params[`${r}_no_context_takeover`]?(this._deflate.close(),this._deflate=null):(this._deflate[a]=0,this._deflate[_]=[]),o(null,e)})}};