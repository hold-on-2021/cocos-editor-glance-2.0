"use strict";const e=require("events"),{createHash:t}=require("crypto"),{createServer:r,STATUS_CODES:s}=require("http"),o=require("./permessage-deflate"),n=require("./websocket"),{format:i,parse:c}=require("./extension"),{GUID:l}=require("./constants"),a=/^[+/0-9A-Za-z]{22}==$/,h=Symbol("kUsedByWebSocketServer");function p(e){e.emit("close")}function d(){this.destroy()}function u(e,t,r,o){e.writable&&(r=r||s[t],o={Connection:"close","Content-type":"text/html","Content-Length":Buffer.byteLength(r),...o},e.write(`HTTP/1.1 ${t} ${s[t]}\r\n`+Object.keys(o).map(e=>`${e}: ${o[e]}`).join("\r\n")+"\r\n\r\n"+r)),e.removeListener("error",d),e.destroy()}module.exports=class extends e{constructor(e,t){if(super(),null==(e={maxPayload:104857600,perMessageDeflate:!1,handleProtocols:null,clientTracking:!0,verifyClient:null,noServer:!1,backlog:null,server:null,host:null,path:null,port:null,...e}).port&&!e.server&&!e.noServer)throw new TypeError('One of the "port", "server", or "noServer" options must be specified');if(null!=e.port)this._server=r((e,t)=>{const r=s[426];t.writeHead(426,{"Content-Length":r.length,"Content-Type":"text/plain"}),t.end(r)}),this._server.listen(e.port,e.host,e.backlog,t);else if(e.server){if(e.server[h])throw new Error("The HTTP/S server is already being used by another WebSocket server");e.server[h]=!0,this._server=e.server}this._server&&(this._removeListeners=function(e,t){for(const r of Object.keys(t))e.on(r,t[r]);return function(){for(const r of Object.keys(t))e.removeListener(r,t[r])}}(this._server,{listening:this.emit.bind(this,"listening"),error:this.emit.bind(this,"error"),upgrade:(e,t,r)=>{this.handleUpgrade(e,t,r,t=>{this.emit("connection",t,e)})}})),!0===e.perMessageDeflate&&(e.perMessageDeflate={}),e.clientTracking&&(this.clients=new Set),this.options=e}address(){if(this.options.noServer)throw new Error('The server is operating in "noServer" mode');return this._server?this._server.address():null}close(e){if(e&&this.once("close",e),this.clients)for(const e of this.clients)e.terminate();const t=this._server;if(t){if(this._removeListeners(),this._removeListeners=this._server=null,null!=this.options.port)return t.close(()=>this.emit("close")),void 0;delete t[h]}process.nextTick(p,this)}shouldHandle(e){if(this.options.path){const t=e.url.indexOf("?");if((-1!==t?e.url.slice(0,t):e.url)!==this.options.path)return!1}return!0}handleUpgrade(e,t,r,s){t.on("error",d);const n=void 0!==e.headers["sec-websocket-key"]&&e.headers["sec-websocket-key"].trim(),i=+e.headers["sec-websocket-version"],l={};if("GET"!==e.method||"websocket"!==e.headers.upgrade.toLowerCase()||!n||!a.test(n)||8!==i&&13!==i||!this.shouldHandle(e))return u(t,400);if(this.options.perMessageDeflate){const r=new o(this.options.perMessageDeflate,!0,this.options.maxPayload);try{const s=c(e.headers["sec-websocket-extensions"]);s[o.extensionName]&&(r.accept(s[o.extensionName]),l[o.extensionName]=r)}catch(e){return u(t,400)}}if(this.options.verifyClient){const o={origin:e.headers[`${8===i?"sec-websocket-origin":"origin"}`],secure:!(!e.connection.authorized&&!e.connection.encrypted),req:e};if(2===this.options.verifyClient.length)return this.options.verifyClient(o,(o,i,c,a)=>{if(!o)return u(t,i||401,c,a);this.completeUpgrade(n,l,e,t,r,s)}),void 0;if(!this.options.verifyClient(o))return u(t,401)}this.completeUpgrade(n,l,e,t,r,s)}completeUpgrade(e,r,s,c,a,h){if(!c.readable||!c.writable)return c.destroy();const p=["HTTP/1.1 101 Switching Protocols","Upgrade: websocket","Connection: Upgrade",`Sec-WebSocket-Accept: ${t("sha1").update(e+l).digest("base64")}`],u=new n(null);let f=s.headers["sec-websocket-protocol"];if(f&&(f=f.trim().split(/ *, */),(f=this.options.handleProtocols?this.options.handleProtocols(f,s):f[0])&&(p.push(`Sec-WebSocket-Protocol: ${f}`),u.protocol=f)),r[o.extensionName]){const e=r[o.extensionName].params,t=i({[o.extensionName]:[e]});p.push(`Sec-WebSocket-Extensions: ${t}`),u._extensions=r}this.emit("headers",p,s),c.write(p.concat("\r\n").join("\r\n")),c.removeListener("error",d),u.setSocket(c,a,this.options.maxPayload),this.clients&&(this.clients.add(u),u.on("close",()=>this.clients.delete(u))),h(u)}};