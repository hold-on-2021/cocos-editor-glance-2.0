"use strict";require("./patch-core");const e=require("util").inherits,t=require("es6-promisify"),o=require("events").EventEmitter;function n(e,t){if(!(this instanceof n))return new n(e,t);o.call(this),this._promisifiedCallback=!1;let i=t;"function"==typeof e?this.callback=e:e&&(i=e),this.timeout=i&&i.timeout||null,this.options=i}module.exports=n,e(n,o),n.prototype.callback=function(e,t){throw new Error('"agent-base" has no default implementation, you must subclass and override `callback()`')},n.prototype.addRequest=function(e,o){const n=Object.assign({},o);null==n.host&&(n.host="localhost"),null==n.port&&(n.port=n.secureEndpoint?443:80);const i=Object.assign({},this.options,n);let r;i.host&&i.path&&delete i.path,delete i.agent,delete i.hostname,delete i._defaultAgent,delete i.defaultPort,delete i.createConnection,e._last=!0,e.shouldKeepAlive=!1;let s=!1;const l=this.timeout,c=this.freeSocket;function a(t){e._hadError||(e.emit("error",t),e._hadError=!0)}function u(e){s||(null!=r&&(clearTimeout(r),r=null),a(e))}!this._promisifiedCallback&&this.callback.length>=3&&(this.callback=t(this.callback,this),this._promisifiedCallback=!0),l>0&&(r=setTimeout(function(){r=null,s=!0;const e=new Error('A "socket" was not created for HTTP request before '+l+"ms");e.code="ETIMEOUT",a(e)},l));try{Promise.resolve(this.callback(e,i)).then(function(t){s||(null!=r&&(clearTimeout(r),r=null),function(e){return e&&"function"==typeof e.addRequest}(t)?t.addRequest(e,i):t?(t.on("free",function(){c(t,i)}),e.onSocket(t)):a(new Error("no Duplex stream was returned to agent-base for `"+e.method+" "+e.path+"`")))},u)}catch(e){Promise.reject(e).catch(u)}},n.prototype.freeSocket=function(e,t){e.destroy()};