"use strict";var e=require("buffer").Buffer;module.exports=function(t){var o=void 0;t.supportsNodeEncodingsExtension=!(e.from||new e(0)instanceof Uint8Array),t.extendNodeEncodings=function(){if(!o){if(o={},!t.supportsNodeEncodingsExtension)return console.error("ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node"),console.error("See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility"),void 0;var i={hex:!0,utf8:!0,"utf-8":!0,ascii:!0,binary:!0,base64:!0,ucs2:!0,"ucs-2":!0,utf16le:!0,"utf-16le":!0};e.isNativeEncoding=function(e){return e&&i[e.toLowerCase()]};var n=require("buffer").SlowBuffer;if(o.SlowBufferToString=n.prototype.toString,n.prototype.toString=function(i,n,r){return i=String(i||"utf8").toLowerCase(),e.isNativeEncoding(i)?o.SlowBufferToString.call(this,i,n,r):(void 0===n&&(n=0),void 0===r&&(r=this.length),t.decode(this.slice(n,r),i))},o.SlowBufferWrite=n.prototype.write,n.prototype.write=function(i,n,r,s){if(isFinite(n))isFinite(r)||(s=r,r=void 0);else{var f=s;s=n,n=r,r=f}n=+n||0;var d=this.length-n;if(r?(r=+r)>d&&(r=d):r=d,s=String(s||"utf8").toLowerCase(),e.isNativeEncoding(s))return o.SlowBufferWrite.call(this,i,n,r,s);if(i.length>0&&(r<0||n<0))throw new RangeError("attempt to write beyond buffer bounds");var u=t.encode(i,s);return u.length<r&&(r=u.length),u.copy(this,n,0,r),r},o.BufferIsEncoding=e.isEncoding,e.isEncoding=function(o){return e.isNativeEncoding(o)||t.encodingExists(o)},o.BufferByteLength=e.byteLength,e.byteLength=n.byteLength=function(i,n){return n=String(n||"utf8").toLowerCase(),e.isNativeEncoding(n)?o.BufferByteLength.call(this,i,n):t.encode(i,n).length},o.BufferToString=e.prototype.toString,e.prototype.toString=function(i,n,r){return i=String(i||"utf8").toLowerCase(),e.isNativeEncoding(i)?o.BufferToString.call(this,i,n,r):(void 0===n&&(n=0),void 0===r&&(r=this.length),t.decode(this.slice(n,r),i))},o.BufferWrite=e.prototype.write,e.prototype.write=function(i,n,r,s){var f=n,d=r,u=s;if(isFinite(n))isFinite(r)||(s=r,r=void 0);else{var c=s;s=n,n=r,r=c}if(s=String(s||"utf8").toLowerCase(),e.isNativeEncoding(s))return o.BufferWrite.call(this,i,f,d,u);n=+n||0;var g=this.length-n;if(r?(r=+r)>g&&(r=g):r=g,i.length>0&&(r<0||n<0))throw new RangeError("attempt to write beyond buffer bounds");var a=t.encode(i,s);return a.length<r&&(r=a.length),a.copy(this,n,0,r),r},t.supportsStreams){var r=require("stream").Readable;o.ReadableSetEncoding=r.prototype.setEncoding,r.prototype.setEncoding=function(e,o){this._readableState.decoder=t.getDecoder(e,o),this._readableState.encoding=e},r.prototype.collect=t._collect}}},t.undoExtendNodeEncodings=function(){if(t.supportsNodeEncodingsExtension){if(!o)throw new Error("require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.");delete e.isNativeEncoding;var i=require("buffer").SlowBuffer;if(i.prototype.toString=o.SlowBufferToString,i.prototype.write=o.SlowBufferWrite,e.isEncoding=o.BufferIsEncoding,e.byteLength=o.BufferByteLength,e.prototype.toString=o.BufferToString,e.prototype.write=o.BufferWrite,t.supportsStreams){var n=require("stream").Readable;n.prototype.setEncoding=o.ReadableSetEncoding,delete n.prototype.collect}o=void 0}}};