export function merge(...t){if(t.length>1){t[0]=t[0].slice(0,-1);const e=t.length-1;for(let n=1;n<e;++n)t[n]=t[n].slice(1,-1);return t[e]=t[e].slice(1),t.join("")}return t[0]};export function subexp(t){return"(?:"+t+")"};export function typeOf(t){return void 0===t?"undefined":null===t?"null":Object.prototype.toString.call(t).split(" ").pop().split("]").shift().toLowerCase()};export function toUpperCase(t){return t.toUpperCase()};export function toArray(t){return void 0!==t&&null!==t?t instanceof Array?t:"number"!=typeof t.length||t.split||t.setInterval||t.call?[t]:Array.prototype.slice.call(t):[]};export function assign(t,e){const n=t;if(e)for(const t in e)n[t]=e[t];return n};