import{isFunction as t}from"./utils";import{noop as r,nextId as e,PROMISE_ID as o,initializePromise as s}from"./-internal";import{asap as i,setAsap as n,setScheduler as c}from"./asap";import a from"./promise/all";import h from"./promise/race";import l from"./promise/resolve";import m from"./promise/reject";import p from"./then";class u{constructor(t){this[o]=e(),this._result=this._state=void 0,this._subscribers=[],r!==t&&("function"!=typeof t&&function(){throw new TypeError("You must pass a resolver function as the first argument to the promise constructor")}(),this instanceof u?s(this,t):function(){throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.")}())}catch(t){return this.then(null,t)}finally(r){let e=this,o=e.constructor;return t(r)?e.then(t=>o.resolve(r()).then(()=>t),t=>o.resolve(r()).then(()=>{throw t})):e.then(r,r)}}u.prototype.then=p;export default u;u.all=a,u.race=h,u.resolve=l,u.reject=m,u._setScheduler=c,u._setAsap=n,u._asap=i;