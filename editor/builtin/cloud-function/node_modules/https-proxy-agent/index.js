var e=require("net"),r=require("tls"),t=require("url"),o=require("assert"),n=require("agent-base"),s=require("util").inherits,i=require("debug")("https-proxy-agent");function c(e){if(!(this instanceof c))return new c(e);if("string"==typeof e&&(e=t.parse(e)),!e)throw new Error("an HTTP(S) proxy server `host` and `port` must be specified!");i("creating new HttpsProxyAgent instance: %o",e),n.call(this,e);var r=Object.assign({},e);this.secureProxy=!!r.protocol&&/^https:?$/i.test(r.protocol),r.host=r.hostname||r.host,r.port=+r.port||(this.secureProxy?443:80),!this.secureProxy||"ALPNProtocols"in r||(r.ALPNProtocols=["http 1.1"]),r.host&&r.path&&(delete r.path,delete r.pathname),this.proxy=r,this.defaultPort=443}function a(e){e.resume()}module.exports=c,s(c,n),c.prototype.callback=function(t,n,s){var c,u=this.proxy,l=[],h=0;function p(){var o=c.read();o?function(o){l.push(o),h+=o.length;var u=Buffer.concat(l,h),d=u.toString("ascii");if(!~d.indexOf("\r\n\r\n"))return i("have not received end of HTTP headers yet..."),p(),void 0;var v=d.substring(0,d.indexOf("\r\n")),y=+v.split(" ")[1];if(i("got proxy server response: %o",v),200==y){var x=c;l=u=null,n.secureEndpoint&&(i("upgrading proxy-connected socket to TLS connection: %o",n.host),n.socket=c,n.servername=n.servername||n.host,n.host=null,n.hostname=null,n.port=null,x=r.connect(n)),f(),t.once("socket",a),s(null,x)}else f(),c.destroy(),(c=new e.Socket).readable=!0,l=u,t.once("socket",g),s(null,c)}(o):c.once("readable",p)}function f(){c.removeListener("end",v),c.removeListener("error",y),c.removeListener("close",d),c.removeListener("readable",p)}function d(e){i("onclose had error %o",e)}function v(){i("onend")}function y(e){f(),s(e)}function g(e){i("replaying proxy buffer for failed request"),o(e.listenerCount("data")>0),e.push(l),l=null}(c=this.secureProxy?r.connect(u):e.connect(u)).on("error",y),c.on("close",d),c.on("end",v),p();var x="CONNECT "+(n.host+":"+n.port)+" HTTP/1.1\r\n",P=Object.assign({},u.headers);u.auth&&(P["Proxy-Authorization"]="Basic "+Buffer.from(u.auth).toString("base64"));var b=n.host;(function(e,r){return Boolean(!r&&80===e||r&&443===e)})(n.port,n.secureEndpoint)||(b+=":"+n.port),P.Host=b,P.Connection="close",Object.keys(P).forEach(function(e){x+=e+": "+P[e]+"\r\n"}),c.write(x+"\r\n")};