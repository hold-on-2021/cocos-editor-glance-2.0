#!/usr/bin/env node
var e,r=process.argv.slice(2),s=[],n=[],i=null,a=require("../package.json").version,t=!1,o=!1,c=!1,l=!1,p=require("../semver"),f=!1,u={};function h(){process.exit(1)}function v(){var r=f?"rcompare":"compare";s.sort(function(e,s){return p[r](e,s,u)}).map(function(e){return p.clean(e,u)}).map(function(r){return i?p.inc(r,i,u,e):r}).forEach(function(e,r,s){console.log(e)})}function g(){console.log(["SemVer "+a,"","A JavaScript implementation of the https://semver.org/ specification","Copyright Isaac Z. Schlueter","","Usage: semver [options] <version> [<version> [...]]","Prints valid versions sorted by SemVer precedence","","Options:","-r --range <range>","        Print versions that match the specified range.","","-i --increment [<level>]","        Increment a version by the specified level.  Level can","        be one of: major, minor, patch, premajor, preminor,","        prepatch, or prerelease.  Default level is 'patch'.","        Only one version may be specified.","","--preid <identifier>","        Identifier to be used to prefix premajor, preminor,","        prepatch or prerelease version increments.","","-l --loose","        Interpret versions and ranges loosely","","-p --include-prerelease","        Always include prerelease versions in range matching","","-c --coerce","        Coerce a string into SemVer if possible","        (does not imply --loose)","","--rtl","        Coerce version strings right to left","","--ltr","        Coerce version strings left to right (default)","","Program exits successfully if any valid version satisfies","all supplied ranges, and prints all satisfying versions.","","If no satisfying versions are found, then exits failure.","","Versions are printed in ascending order, so supplying","multiple versions to the utility will just sort them."].join("\n"))}(function(){if(!r.length)return g();for(;r.length;){var a=r.shift(),u=a.indexOf("=");switch(-1!==u&&(a=a.slice(0,u),r.unshift(a.slice(u+1))),a){case"-rv":case"-rev":case"--rev":case"--reverse":f=!0;break;case"-l":case"--loose":t=!0;break;case"-p":case"--include-prerelease":o=!0;break;case"-v":case"--version":s.push(r.shift());break;case"-i":case"--inc":case"--increment":switch(r[0]){case"major":case"minor":case"patch":case"prerelease":case"premajor":case"preminor":case"prepatch":i=r.shift();break;default:i="patch"}break;case"--preid":e=r.shift();break;case"-r":case"--range":n.push(r.shift());break;case"-c":case"--coerce":c=!0;break;case"--rtl":l=!0;break;case"--ltr":l=!1;break;case"-h":case"--help":case"-?":return g();default:s.push(a)}}var m={loose:t,includePrerelease:o,rtl:l};if(!(s=s.map(function(e){return c?(p.coerce(e,m)||{version:e}).version:e}).filter(function(e){return p.valid(e)})).length)return h();if(i&&(1!==s.length||n.length))return console.error("--inc can only be used on a single version with no range"),void h();for(var d=0,b=n.length;d<b;d++)if(!(s=s.filter(function(e){return p.satisfies(e,n[d],m)})).length)return h();return v()})();