var o=require("tape"),a=require("./"),e=require("./mutable");o("merge",function(o){o.deepEqual(a({a:"foo"},{b:"bar"}),{a:"foo",b:"bar"}),o.end()}),o("replace",function(o){o.deepEqual(a({a:"foo"},{a:"bar"}),{a:"bar"}),o.end()}),o("undefined",function(o){var e={a:void 0},r={b:"foo"};o.deepEqual(a(e,r),{a:void 0,b:"foo"}),o.deepEqual(a(r,e),{a:void 0,b:"foo"}),o.end()}),o("handle 0",function(o){var e={a:"default"},r={a:0};o.deepEqual(a(e,r),{a:0}),o.deepEqual(a(r,e),{a:"default"}),o.end()}),o("is immutable",function(o){var e={};a(e,{foo:"bar"}),o.equal(e.foo,void 0),o.end()}),o("null as argument",function(o){o.deepEqual(a(null,{foo:"bar"},void 0),{foo:"bar"}),o.end()}),o("mutable",function(o){var a={foo:"bar"};e(a,{bar:"baz"}),o.equal(a.bar,"baz"),o.end()}),o("null prototype",function(o){var e=Object.create(null);e.b="bar",o.deepEqual(a({a:"foo"},e),{a:"foo",b:"bar"}),o.end()}),o("null prototype mutable",function(o){var a={foo:"bar"},r=Object.create(null);r.bar="baz",e(a,r),o.equal(a.bar,"baz"),o.end()}),o("prototype pollution",function(o){var e={};o.strictEqual(e.oops,void 0),a({},'{"__proto__":{"oops":"It works!"}}'),o.strictEqual(e.oops,void 0),o.end()}),o("prototype pollution mutable",function(o){var a={};o.strictEqual(a.oops,void 0),e({},'{"__proto__":{"oops":"It works!"}}'),o.strictEqual(a.oops,void 0),o.end()});