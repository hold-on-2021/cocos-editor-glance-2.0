"use strict";const t=2147483647,o=/^xn--/,n=/[^\0-\x7E]/,e=/[\x2E\u3002\uFF0E\uFF61]/g,r={overflow:"Overflow: input needs wider integers to process","not-basic":"Illegal input >= 0x80 (not a basic code point)","invalid-input":"Invalid input"},c=Math.floor,s=String.fromCharCode;function i(t){throw new RangeError(r[t])}function u(t,o){const n=t.split("@");let r="";n.length>1&&(r=n[0]+"@",t=n[1]);const c=function(t,o){const n=[];let e=t.length;for(;e--;)n[e]=o(t[e]);return n}((t=t.replace(e,".")).split("."),o).join(".");return r+c}function f(t){const o=[];let n=0;const e=t.length;for(;n<e;){const r=t.charCodeAt(n++);if(r>=55296&&r<=56319&&n<e){const e=t.charCodeAt(n++);56320==(64512&e)?o.push(((1023&r)<<10)+(1023&e)+65536):(o.push(r),n--)}else o.push(r)}return o}const l=function(t){return t-48<10?t-22:t-65<26?t-65:t-97<26?t-97:36},d=function(t,o){return t+22+75*(t<26)-((0!=o)<<5)},h=function(t,o,n){let e=0;for(t=n?c(t/700):t>>1,t+=c(t/o);t>455;e+=36)t=c(t/35);return c(e+36*t/(t+38))},a=function(o){const n=[],e=o.length;let r=0,s=128,u=72,f=o.lastIndexOf("-");f<0&&(f=0);for(let t=0;t<f;++t)o.charCodeAt(t)>=128&&i("not-basic"),n.push(o.charCodeAt(t));for(let d=f>0?f+1:0;d<e;){let f=r;for(let n=1,s=36;;s+=36){d>=e&&i("invalid-input");const f=l(o.charCodeAt(d++));(f>=36||f>c((t-r)/n))&&i("overflow"),r+=f*n;const h=s<=u?1:s>=u+26?26:s-u;if(f<h)break;const a=36-h;n>c(t/a)&&i("overflow"),n*=a}const a=n.length+1;u=h(r-f,a,0==f),c(r/a)>t-s&&i("overflow"),s+=c(r/a),r%=a,n.splice(r++,0,s)}return String.fromCodePoint(...n)},p=function(o){const n=[];let e=(o=f(o)).length,r=128,u=0,l=72;for(const t of o)t<128&&n.push(s(t));let a=n.length,p=a;for(a&&n.push("-");p<e;){let e=t;for(const t of o)t>=r&&t<e&&(e=t);const f=p+1;e-r>c((t-u)/f)&&i("overflow"),u+=(e-r)*f,r=e;for(const e of o)if(e<r&&++u>t&&i("overflow"),e==r){let t=u;for(let o=36;;o+=36){const e=o<=l?1:o>=l+26?26:o-l;if(t<e)break;const r=t-e,i=36-e;n.push(s(d(e+r%i,0))),t=c(r/i)}n.push(s(d(t,0))),l=h(u,f,p==a),u=0,++p}++u,++r}return n.join("")},g={version:"2.1.0",ucs2:{decode:f,encode:t=>String.fromCodePoint(...t)},decode:a,encode:p,toASCII:function(t){return u(t,function(t){return n.test(t)?"xn--"+p(t):t})},toUnicode:function(t){return u(t,function(t){return o.test(t)?a(t.slice(4).toLowerCase()):t})}};module.exports=g;