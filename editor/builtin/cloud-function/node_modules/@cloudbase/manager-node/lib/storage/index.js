"use strict";var e=this&&this.__decorate||function(e,t,o,r){var i,a=arguments.length,l=a<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,o):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,o,r);else for(var s=e.length-1;s>=0;s--)(i=e[s])&&(l=(a<3?i(l):a>3?i(t,o,l):i(t,o))||l);return a>3&&l&&Object.defineProperty(t,o,l),l},t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const o=t(require("fs")),r=t(require("util")),i=t(require("path")),a=t(require("make-dir")),l=t(require("walkdir")),s=t(require("micromatch")),n=t(require("cos-nodejs-sdk-v5")),c=require("../utils"),u=require("../error"),d=5242880;class y{constructor(e){this.environment=e,this.tcbService=new c.CloudService(e.cloudBaseContext,"tcb","2018-06-08")}async uploadFile(e){const{localPath:t,cloudPath:o="",onProgress:r}=e,{bucket:i,region:a}=this.getStorageConfig();await this.uploadFileCustom({localPath:t,cloudPath:o,bucket:i,region:a,onProgress:r})}async uploadFileCustom(e){const{localPath:t,cloudPath:a,bucket:l,region:s,onProgress:n,fileId:c=!0}=e;let y="",g=i.default.resolve(t);if(!o.default.existsSync(g))throw new u.CloudBaseError(`本地路径不存在：${g}`);const h=o.default.statSync(g);if(h.isDirectory()){const e=i.default.parse(a).base,r=i.default.join(t,e);o.default.existsSync(r)&&(y=i.default.resolve(r))}else y=g;if(!y)throw new u.CloudBaseError("本地文件不存在！");const f=this.getCos(),p=r.default.promisify(f.putObject).bind(f),C=r.default.promisify(f.sliceUploadFile).bind(f);let w,m;if(c){w=(await this.getUploadMetadata(a)).cosFileId}if(200!==(m=h.size<d?await p({onProgress:n,Bucket:l,Region:s,Key:a,StorageClass:"STANDARD",ContentLength:h.size,Body:o.default.createReadStream(y),"x-cos-meta-fileid":w}):await C({Bucket:l,Region:s,Key:a,FilePath:y,StorageClass:"STANDARD",AsyncLimit:3,onProgress:n,"x-cos-meta-fileid":w})).statusCode)throw new u.CloudBaseError(`上传文件错误：${JSON.stringify(m)}`)}async uploadDirectory(e){const{localPath:t,cloudPath:o="",ignore:r,onProgress:i,onFileFinish:a}=e,{bucket:l,region:s}=this.getStorageConfig();await this.uploadDirectoryCustom({localPath:t,cloudPath:o,bucket:l,region:s,ignore:r,onProgress:i,onFileFinish:a})}async uploadDirectoryCustom(e){const{localPath:t,cloudPath:o,bucket:a,region:l,onProgress:s,onFileFinish:n,ignore:u,fileId:y=!0}=e,g=i.default.resolve(t),h=i.default.join(g,i.default.sep),f=await this.walkLocalDir(h,u);if(!f||!f.length)return;const p=f.map(e=>{const t=e.replace(h,"").replace(/\\/g,"/");let r=i.default.join(o,t).replace(/\\/g,"/");return c.isDirectory(e)?{filePath:e,cloudFileKey:r=this.getCloudKey(r),isDir:!0}:{filePath:e,cloudFileKey:r,isDir:!1}}),C=p.filter(e=>e.isDir).map(e=>this.createCloudDirectroyCustom({cloudPath:e.cloudFileKey,bucket:a,region:l}));await Promise.all(C);const w=p.filter(e=>!e.isDir).map(async e=>{let t;if(y){t=(await this.getUploadMetadata(e.cloudFileKey)).cosFileId}return{Bucket:a,Region:l,Key:e.cloudFileKey,FilePath:e.filePath,"x-cos-meta-fileid":t}}),m=await Promise.all(w),P=this.getCos(),k=r.default.promisify(P.uploadFiles).bind(P);await k({files:m,SliceSize:d,onProgress:s,onFileFinish:n})}async createCloudDirectroy(e){const{bucket:t,region:o}=this.getStorageConfig();await this.createCloudDirectroyCustom({cloudPath:e,bucket:t,region:o})}async createCloudDirectroyCustom(e){const{cloudPath:t,bucket:o,region:i}=e,a=this.getCos(),l=r.default.promisify(a.putObject).bind(a),s=this.getCloudKey(t),n=await l({Bucket:o,Region:i,Key:s,Body:""});if(200!==n.statusCode)throw new u.CloudBaseError(`创建文件夹失败：${JSON.stringify(n)}`)}async downloadFile(e){const{cloudPath:t,localPath:r}=e,a=i.default.resolve(r),l=i.default.dirname(r);if(!o.default.existsSync(l))throw new u.CloudBaseError("路径文件夹不存在");const s=await this.getTemporaryUrl([t]),{url:n}=s[0],{proxy:d}=await this.getAuthConfig(),y=await c.fetchStream(n,{},d),g=o.default.createWriteStream(a);y.body.pipe(g)}async downloadDirectory(e){const{cloudPath:t,localPath:r}=e,l=i.default.resolve(r);if(!o.default.existsSync(l))throw new u.CloudBaseError("本地存储路径不存在！");const s=this.getCloudKey(t),n=(await this.walkCloudDir(s)).map(async e=>{const t=e.Key.replace(s,"");if(!t||/\/$/g.test(t))return;const o=i.default.join(l,t),r=i.default.dirname(o);await a.default(r),await this.downloadFile({cloudPath:e.Key,localPath:o})});await Promise.all(n)}async listDirectoryFiles(e){return await this.walkCloudDir(e)}async getTemporaryUrl(e){if(!e||!Array.isArray(e))throw new u.CloudBaseError("fileList 必须是非空的数组");const t=e.map(e=>"string"==typeof e?{cloudPath:e,maxAge:3600}:e),o=t.find(e=>!e.cloudPath||!e.maxAge||"string"!=typeof e.cloudPath);if(o)throw new u.CloudBaseError(`非法参数：${JSON.stringify(o)}`);const r=[],i=t.map(e=>(async()=>{try{await this.getFileInfo(e.cloudPath)}catch(t){404===t.statusCode&&r.push(e.cloudPath)}})());if(await Promise.all(i),r.length)throw new u.CloudBaseError(`以下文件不存在：${r.join(", ")}`);const a=t.map(e=>({fileid:this.cloudPathToFileId(e.cloudPath),max_age:e.maxAge})),l=this.getAuthConfig();return(await c.cloudBaseRequest({config:l,params:{file_list:a,action:"storage.batchGetDownloadUrl"},method:"POST"})).data.download_list.map(e=>({url:e.download_url,fileId:e.fileid||e.fileID}))}async deleteFile(e){if(!e||!Array.isArray(e))throw new u.CloudBaseError("fileList必须是非空的数组");if(e.some(e=>!e||"string"!=typeof e))throw new u.CloudBaseError("fileList的元素必须是非空的字符串");const{bucket:t,env:o}=this.getStorageConfig(),r=e.map(e=>this.cloudPathToFileId(e)),i=this.getAuthConfig(),a=(await c.cloudBaseRequest({config:i,params:{action:"storage.batchDeleteFile",fileid_list:r},method:"POST"})).data.delete_list.filter(e=>"SUCCESS"!==e.code).map(e=>`${e.fileID} : ${e.code}`);if(a.length)throw new u.CloudBaseError(`部分删除文件失败：${JSON.stringify(a)}`)}async deleteFileCustom(e,t,o){if(!e||!Array.isArray(e))throw new u.CloudBaseError("fileList必须是非空的数组");if(e.some(e=>!e||"string"!=typeof e))throw new u.CloudBaseError("fileList的元素必须是非空的字符串");const i=this.getCos(),a=r.default.promisify(i.deleteObject).bind(i),l=e.map(async e=>a({Bucket:t,Region:o,Key:e}));await Promise.all(l)}async getFileInfo(e){const t=this.getCos(),o=r.default.promisify(t.headObject).bind(t),{bucket:i,region:a}=this.getStorageConfig(),{headers:l}=await o({Bucket:i,Region:a,Key:e});if(!l)throw new u.CloudBaseError(`[${e}] 获取文件信息失败`);return{Size:Number(Number(l["content-length"])/1024).toFixed(2),Type:l["content-type"],Date:l.date,ETag:l.etag}}async deleteDirectory(e){const{bucket:t,region:o}=this.getStorageConfig();await this.deleteDirectoryCustom({cloudPath:e,bucket:t,region:o})}async deleteDirectoryCustom(e){const{cloudPath:t,bucket:o,region:i}=e,a=this.getCloudKey(t),l=this.getCos(),s=r.default.promisify(l.deleteObject).bind(l),n=(await this.walkCloudDirCustom({bucket:o,region:i,prefix:a})).map(async e=>s({Bucket:o,Region:i,Key:e.Key}));await Promise.all(n)}async getStorageAcl(){const{bucket:e,env:t}=this.getStorageConfig();return(await this.tcbService.request("DescribeStorageACL",{EnvId:t,Bucket:e})).AclTag}async setStorageAcl(e){if(!["READONLY","PRIVATE","ADMINWRITE","ADMINONLY"].includes(e))throw new u.CloudBaseError("非法的权限类型");const{bucket:t,env:o}=this.getStorageConfig();return await this.tcbService.request("ModifyStorageACL",{EnvId:o,Bucket:t,AclTag:e})}async walkCloudDir(e,t){const{bucket:o,region:r}=this.getStorageConfig();return this.walkCloudDirCustom({prefix:e,bucket:o,region:r,marker:t})}async walkCloudDirCustom(e){const{prefix:t,bucket:o,region:i,marker:a="/"}=e;let l=[];const s=this.getCos(),n=r.default.promisify(s.getBucket).bind(s),c=this.getCloudKey(t),u=await n({Bucket:o,Region:i,Prefix:c,MaxKeys:100,Marker:a});l.push(...u.Contents);let d=[];return"true"!==u.IsTruncated&&!0!==u.IsTruncated||(d=await this.walkCloudDirCustom({bucket:o,region:i,prefix:c,marker:u.NextMarker})),l.push(...d),l}async walkLocalDir(e,t){try{return l.default.async(e,{filter:(e,o)=>t&&t.length?s.default.not(o,t):o})}catch(e){throw new u.CloudBaseError(e.message)}}async getUploadMetadata(e){const t=this.getAuthConfig(),o=await c.cloudBaseRequest({config:t,params:{path:e,action:"storage.getUploadMetadata"},method:"POST"});if(o.code)throw new u.CloudBaseError(`${o.code}: ${o.message||""}`,{requestId:o.requestId});return o.data}getCos(){const{secretId:e,secretKey:t,token:o,proxy:r}=this.getAuthConfig(),i=process.env.TCB_COS_PROXY;return o?new n.default({getAuthorization:function(a,l){l({TmpSecretId:e,TmpSecretKey:t,XCosSecurityToken:o,ExpiredTime:36e5,Proxy:i||r})}}):new n.default({SecretId:e,SecretKey:t,Proxy:i||r})}getAuthConfig(){const{secretId:e,secretKey:t,token:o,proxy:r}=this.environment.cloudBaseContext;return{envId:this.environment.getEnvId(),secretId:e,secretKey:t,token:o,proxy:r}}getCloudKey(e){return e?"/"===e[e.length-1]?e:`${e}/`:""}cloudPathToFileId(e){const{env:t,bucket:o}=this.getStorageConfig();return`cloud://${t}.${o}/${e}`}getStorageConfig(){var e,t;const o=this.environment.lazyEnvironmentConfig,r=null===(t=null===(e=o)||void 0===e?void 0:e.Storages)||void 0===t?void 0:t[0],{Region:i,Bucket:a}=r;return{region:process.env.TCB_COS_REGION||i,bucket:a,env:o.EnvId}}}e([c.preLazy()],y.prototype,"uploadFile",null),e([c.preLazy()],y.prototype,"uploadFileCustom",null),e([c.preLazy()],y.prototype,"uploadDirectory",null),e([c.preLazy()],y.prototype,"uploadDirectoryCustom",null),e([c.preLazy()],y.prototype,"createCloudDirectroy",null),e([c.preLazy()],y.prototype,"createCloudDirectroyCustom",null),e([c.preLazy()],y.prototype,"downloadFile",null),e([c.preLazy()],y.prototype,"downloadDirectory",null),e([c.preLazy()],y.prototype,"listDirectoryFiles",null),e([c.preLazy()],y.prototype,"getTemporaryUrl",null),e([c.preLazy()],y.prototype,"deleteFile",null),e([c.preLazy()],y.prototype,"deleteFileCustom",null),e([c.preLazy()],y.prototype,"getFileInfo",null),e([c.preLazy()],y.prototype,"deleteDirectory",null),e([c.preLazy()],y.prototype,"deleteDirectoryCustom",null),e([c.preLazy()],y.prototype,"getStorageAcl",null),e([c.preLazy()],y.prototype,"setStorageAcl",null),e([c.preLazy()],y.prototype,"walkCloudDir",null),e([c.preLazy()],y.prototype,"walkCloudDirCustom",null),exports.StorageService=y;