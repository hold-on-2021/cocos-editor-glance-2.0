"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const r=require("./constant"),e=require("./util");exports.Validate=class{static isGeopoint(t,o){if(e.Util.whichType(o)!==r.FieldType.Number)throw new Error("Geo Point must be number type");const i=Math.abs(o);if("latitude"===t&&i>90)throw new Error("latitude should be a number ranges from -90 to 90");if("longitude"===t&&i>180)throw new Error("longitude should be a number ranges from -180 to 180");return!0}static isInteger(e,t){if(!Number.isInteger(t))throw new Error(e+r.ErrorCode.IntergerError);return!0}static isFieldOrder(e){if(-1===r.OrderDirectionList.indexOf(e))throw new Error(r.ErrorCode.DirectionError);return!0}static isFieldPath(r){if(!/^[a-zA-Z0-9-_\.]/.test(r))throw new Error;return!0}static isOperator(e){if(-1===r.WhereFilterOpList.indexOf(e))throw new Error(r.ErrorCode.OpStrError);return!0}static isCollName(e){if(!/^[a-zA-Z0-9]([a-zA-Z0-9-_]){1,32}$/.test(e))throw new Error(r.ErrorCode.CollNameError);return!0}static isDocID(e){if(!/^([a-fA-F0-9]){24}$/.test(e))throw new Error(r.ErrorCode.DocIDError);return!0}};