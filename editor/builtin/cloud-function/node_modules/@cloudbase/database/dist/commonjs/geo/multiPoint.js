"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const t=require("../helper/symbol"),e=require("./point"),r=require("../utils/type");exports.MultiPoint=class{constructor(t){if(!r.isArray(t))throw new TypeError(`"points" must be of type Point[]. Received type ${typeof t}`);if(0===t.length)throw new Error('"points" must contain 1 point at least');t.forEach(t=>{if(!(t instanceof e.Point))throw new TypeError(`"points" must be of type Point[]. Received type ${typeof t}[]`)}),this.points=t}parse(t){return{[t]:{type:"MultiPoint",coordinates:this.points.map(t=>t.toJSON().coordinates)}}}toJSON(){return{type:"MultiPoint",coordinates:this.points.map(t=>t.toJSON().coordinates)}}static validate(t){if("MultiPoint"!==t.type||!r.isArray(t.coordinates))return!1;for(let e of t.coordinates)if(!r.isNumber(e[0])||!r.isNumber(e[1]))return!1;return!0}get _internalType(){return t.SYMBOL_GEO_MULTI_POINT}};