"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const t=require("bson"),a=require("./index");class e{constructor(t,a){this._data=t,this.requestId=a}data(){return this._data}}const s="database.startTransaction",i="database.commitTransaction",n="database.abortTransaction",r="database.getInTransaction",o="database.updateDocInTransaction",c="database.deleteDocInTransaction";class d{constructor(t){this._db=t,this._request=new a.Db.reqClass(this._db.config)}async init(){const t=await this._request.send(s);if(t.code)throw t;this._id=t.transactionId}async get(a){const s={collectionName:a._coll,transactionId:this._id,_id:a.id},i=await this._request.send(r,s);if(i.code)throw i;return new e(t.EJSON.parse(i.data),i.requestId)}async set(a,e){const s={collectionName:a._coll,transactionId:this._id,_id:a.id,data:t.EJSON.stringify(e,{relaxed:!1}),upsert:!0},i=await this._request.send(o,s);if(i.code)throw i;return Object.assign({},i,{updated:t.EJSON.parse(i.updated),upserted:i.upserted?JSON.parse(i.upserted):null})}async update(a,e){const s={collectionName:a._coll,transactionId:this._id,_id:a.id,data:t.EJSON.stringify({$set:e},{relaxed:!1})},i=await this._request.send(o,s);if(i.code)throw i;return Object.assign({},i,{updated:t.EJSON.parse(i.updated)})}async delete(a){const e={collectionName:a._coll,transactionId:this._id,_id:a.id},s=await this._request.send(c,e);if(s.code)throw s;return Object.assign({},s,{deleted:t.EJSON.parse(s.deleted)})}async commit(){const t={transactionId:this._id},a=await this._request.send(i,t);if(a.code)throw a;return a}async rollback(){const t={transactionId:this._id},a=await this._request.send(n,t);if(a.code)throw a;return a}}exports.Transaction=d,exports.startTransaction=async function(){const t=new d(this);return await t.init(),t},exports.runTransaction=async function t(a,e=3){if(e<=0)throw new Error("Transaction failed");try{const s=new d(this);await s.init(),await a(s),await s.commit()}catch(s){return console.log(s),t.bind(this)(a,--e)}};