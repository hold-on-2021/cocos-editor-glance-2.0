import{SYMBOL_GEO_MULTI_POINT as t}from"../helper/symbol";import{Point as o}from"./point";import{isArray as e,isNumber as r}from"../utils/type";export class MultiPoint{constructor(t){if(!e(t))throw new TypeError(`"points" must be of type Point[]. Received type ${typeof t}`);if(0===t.length)throw new Error('"points" must contain 1 point at least');t.forEach(t=>{if(!(t instanceof o))throw new TypeError(`"points" must be of type Point[]. Received type ${typeof t}[]`)}),this.points=t}parse(t){return{[t]:{type:"MultiPoint",coordinates:this.points.map(t=>t.toJSON().coordinates)}}}toJSON(){return{type:"MultiPoint",coordinates:this.points.map(t=>t.toJSON().coordinates)}}static validate(t){if("MultiPoint"!==t.type||!e(t.coordinates))return!1;for(let o of t.coordinates)if(!r(o[0])||!r(o[1]))return!1;return!0}get _internalType(){return t}};