const t=[],e={};class r{constructor(t){Object.defineProperties(this,{target:{enumerable:!1,writable:!1,configurable:!1,value:t}})}}export class InternalSymbol extends r{constructor(t,r){if(r!==e)throw new TypeError("InternalSymbol cannot be constructed with new operator");super(t)}static for(r){for(let e=0,n=t.length;e<n;e++)if(t[e].target===r)return t[e].instance;const n=new InternalSymbol(r,e);return t.push({target:r,instance:n}),n}};export default InternalSymbol;