import{ErrorCode as r,WhereFilterOpList as t,OrderDirectionList as e,FieldType as o}from"./constant";import{Util as i}from"./util";export class Validate{static isGeopoint(r,t){if(i.whichType(t)!==o.Number)throw new Error("Geo Point must be number type");const e=Math.abs(t);if("latitude"===r&&e>90)throw new Error("latitude should be a number ranges from -90 to 90");if("longitude"===r&&e>180)throw new Error("longitude should be a number ranges from -180 to 180");return!0}static isInteger(t,e){if(!Number.isInteger(e))throw new Error(t+r.IntergerError);return!0}static isFieldOrder(t){if(-1===e.indexOf(t))throw new Error(r.DirectionError);return!0}static isFieldPath(r){if(!/^[a-zA-Z0-9-_\.]/.test(r))throw new Error;return!0}static isOperator(e){if(-1===t.indexOf(e))throw new Error(r.OpStrError);return!0}static isCollName(t){if(!/^[a-zA-Z0-9]([a-zA-Z0-9-_]){1,32}$/.test(t))throw new Error(r.CollNameError);return!0}static isDocID(t){if(!/^([a-fA-F0-9]){24}$/.test(t))throw new Error(r.DocIDError);return!0}};