import{Db as t}from"./index";import{EJSON as e}from"bson";export default class Aggregation{constructor(e,s){this._db=e,this._request=new t.reqClass(this._db.config),this._stages=[],this._collectionName=s}async end(){const t=await this._request.send("database.aggregate",{collectionName:this._collectionName,stages:this._stages});return t&&t.data&&t.data.list?{requestId:t.requestId,data:JSON.parse(t.data.list).map(e.parse)}:t}unwrap(){return this._stages}};["addFields","bucket","bucketAuto","count","geoNear","group","limit","match","project","lookup","replaceRoot","sample","skip","sort","sortByCount","unwind"].forEach(t=>{Aggregation.prototype[t]=function(e){return this._stages.push({stageKey:`$${t}`,stageValue:JSON.stringify(e)}),this}});