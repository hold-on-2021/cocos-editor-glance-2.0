import{InternalSymbol as t}from"./symbol";export const getType=t=>Object.prototype.toString.call(t).slice(8,-1).toLowerCase();export const isObject=t=>"object"===getType(t);export const isString=t=>"string"===getType(t);export const isNumber=t=>"number"===getType(t);export const isPromise=t=>"promise"===getType(t);export const isFunction=t=>"function"==typeof t;export const isArray=t=>Array.isArray(t);export const isDate=t=>"date"===getType(t);export const isRegExp=t=>"regexp"===getType(t);export const isInternalObject=e=>e&&e._internalType instanceof t;export const isPlainObject=t=>{if("object"!=typeof t||null===t)return!1;let e=t;for(;null!==Object.getPrototypeOf(e);)e=Object.getPrototypeOf(e);return Object.getPrototypeOf(t)===e};