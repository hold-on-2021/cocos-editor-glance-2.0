"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const e=require("@nodelib/fs.scandir"),t=require("./common"),s=require("./reader");exports.default=class extends s.default{constructor(){super(...arguments),this._scandir=e.scandirSync,this._storage=new Set,this._queue=new Set}read(){return this._pushToQueue(this._root,this._settings.basePath),this._handleQueue(),[...this._storage]}_pushToQueue(e,t){this._queue.add({directory:e,base:t})}_handleQueue(){for(const e of this._queue.values())this._handleDirectory(e.directory,e.base)}_handleDirectory(e,t){try{const s=this._scandir(e,this._settings.fsScandirSettings);for(const e of s)this._handleEntry(e,t)}catch(e){this._handleError(e)}}_handleError(e){if(t.isFatalError(this._settings,e))throw e}_handleEntry(e,s){const r=e.path;void 0!==s&&(e.path=t.joinPathSegments(s,e.name,this._settings.pathSegmentSeparator)),t.isAppliedFilter(this._settings.entryFilter,e)&&this._pushToStorage(e),e.dirent.isDirectory()&&t.isAppliedFilter(this._settings.deepFilter,e)&&this._pushToQueue(r,e.path)}_pushToStorage(e){this._storage.add(e)}};