module.exports={read:function(i,s){"string"!=typeof i&&(r.buffer(i,"buf"),i=i.toString("ascii"));var m=i.split("\n");if(m[0].match(/^Private-key-format\: v1/)){var d=m[1].split(" "),u=parseInt(d[1],10),l=d[2];if(!o[u])throw new Error("Unsupported algorithm: "+l);return function(r,a){if(o[r].match(/^RSA-/))return function(r){var e={};r.forEach(function(r){"Modulus:"===r.split(" ")[0]?e.n=p(r):"PublicExponent:"===r.split(" ")[0]?e.e=p(r):"PrivateExponent:"===r.split(" ")[0]?e.d=p(r):"Prime1:"===r.split(" ")[0]?e.p=p(r):"Prime2:"===r.split(" ")[0]?e.q=p(r):"Exponent1:"===r.split(" ")[0]?e.dmodp=p(r):"Exponent2:"===r.split(" ")[0]?e.dmodq=p(r):"Coefficient:"===r.split(" ")[0]&&(e.iqmp=p(r))});var a={type:"rsa",parts:[{name:"e",data:n.mpNormalize(e.e)},{name:"n",data:n.mpNormalize(e.n)},{name:"d",data:n.mpNormalize(e.d)},{name:"p",data:n.mpNormalize(e.p)},{name:"q",data:n.mpNormalize(e.q)},{name:"dmodp",data:n.mpNormalize(e.dmodp)},{name:"dmodq",data:n.mpNormalize(e.dmodq)},{name:"iqmp",data:n.mpNormalize(e.iqmp)}]};return new t(a)}(a);if("ECDSA-P384-SHA384"===o[r]||"ECDSA-P256-SHA256"===o[r]){var i=e.from(a[0].split(" ")[1],"base64"),s="nistp384",m=384;"ECDSA-P256-SHA256"===o[r]&&(s="nistp256",m=256);var d=n.publicFromPrivateECDSA(s,i),u=d.part.Q.data,l={type:"ecdsa",curve:s,size:m,parts:[{name:"curve",data:e.from(s)},{name:"d",data:i},{name:"Q",data:u}]};return new t(l)}throw new Error("Unsupported algorithm: "+o[r])}(u,m.slice(2))}var f=0;for(;m[f].match(/^\;/);)f++;if((m[f].match(/\. IN KEY /)||m[f].match(/\. IN DNSKEY /))&&0===m[f+1].length)return function(r){var t=r.split(" "),i=parseInt(t[5],10);if(!o[i])throw new Error("Unsupported algorithm: "+i);var p=t.slice(6,t.length).join(),s=e.from(p,"base64");if(o[i].match(/^RSA-/)){var m=s.readUInt8(0);if(3!=m&&1!=m)throw new Error("Cannot parse dnssec key: unsupported exponent length");var d=s.slice(1,m+1);d=n.mpNormalize(d);var u=s.slice(1+m);u=n.mpNormalize(u);var l={type:"rsa",parts:[]};return l.parts.push({name:"e",data:d}),l.parts.push({name:"n",data:u}),new a(l)}if("ECDSA-P384-SHA384"===o[i]||"ECDSA-P256-SHA256"===o[i]){var f="nistp384",h=384;o[i].match(/^ECDSA-P256-SHA256/)&&(f="nistp256",h=256);var c={type:"ecdsa",curve:f,size:h,parts:[{name:"curve",data:e.from(f)},{name:"Q",data:n.ecNormalize(s)}]};return new a(c)}throw new Error("Unsupported algorithm: "+o[i])}(m[f]);throw new Error("Cannot parse dnssec key")},write:function(r,i){if(t.isPrivateKey(r)){if("rsa"===r.type)return function(r,a){r.part.dmodp&&r.part.dmodq||n.addRSAMissing(r);var t="";t+="Private-key-format: v1.3\n",t+="Algorithm: "+function(r){if(r&&r.hashAlgo&&"sha1"!==r.hashAlgo){if("sha256"===r.hashAlgo)return"8 (RSASHA256)";if("sha512"===r.hashAlgo)return"10 (RSASHA512)";throw new Error("Unknown or unsupported hash: "+r.hashAlgo)}return"5 (RSASHA1)"}(a)+"\n";var i=n.mpDenormalize(r.part.n.data);t+="Modulus: "+i.toString("base64")+"\n";var o=n.mpDenormalize(r.part.e.data);t+="PublicExponent: "+o.toString("base64")+"\n";var p=n.mpDenormalize(r.part.d.data);t+="PrivateExponent: "+p.toString("base64")+"\n";var m=n.mpDenormalize(r.part.p.data);t+="Prime1: "+m.toString("base64")+"\n";var d=n.mpDenormalize(r.part.q.data);t+="Prime2: "+d.toString("base64")+"\n";var u=n.mpDenormalize(r.part.dmodp.data);t+="Exponent1: "+u.toString("base64")+"\n";var l=n.mpDenormalize(r.part.dmodq.data);t+="Exponent2: "+l.toString("base64")+"\n";var f=n.mpDenormalize(r.part.iqmp.data);t+="Coefficient: "+f.toString("base64")+"\n";var h=new Date;return t+="Created: "+s(h)+"\n",t+="Publish: "+s(h)+"\n",t+="Activate: "+s(h)+"\n",e.from(t,"ascii")}(r,i);if("ecdsa"===r.type)return function(r,a){var t="";if(t+="Private-key-format: v1.3\n","nistp256"===r.curve)t+="Algorithm: 13 (ECDSAP256SHA256)\n";else{if("nistp384"!==r.curve)throw new Error("Unsupported curve");t+="Algorithm: 14 (ECDSAP384SHA384)\n"}var n=r.part.d.data.toString("base64");t+="PrivateKey: "+n+"\n";var i=new Date;return t+="Created: "+s(i)+"\n",t+="Publish: "+s(i)+"\n",t+="Activate: "+s(i)+"\n",e.from(t,"ascii")}(r);throw new Error("Unsupported algorithm: "+r.type)}throw a.isKey(r)?new Error('Format "dnssec" only supports writing private keys'):new Error("key is not a Key or PrivateKey")}};var r=require("assert-plus"),e=require("safer-buffer").Buffer,a=require("../key"),t=require("../private-key"),n=require("../utils"),i=(require("../ssh-buffer"),require("../dhe"),{"rsa-sha1":5,"rsa-sha256":8,"rsa-sha512":10,"ecdsa-p256-sha256":13,"ecdsa-p384-sha384":14}),o={};function p(r){return e.from(r.split(" ")[1],"base64")}function s(r){var e=r.getFullYear()+""+(r.getMonth()+1)+r.getUTCDate();return e+=""+r.getUTCHours()+r.getUTCMinutes(),e+=r.getUTCSeconds()}Object.keys(i).forEach(function(r){o[i[r]]=r.toUpperCase()});