module.exports={read:function(e,r){return d.read(e,r,"pkcs8")},readPkcs8:function(a,d,o){o.peek()===r.Ber.Integer&&(e.strictEqual(d,"private","unexpected Integer at start of public key"),o.readString(r.Ber.Integer,!0));o.readSequence();var p=o.offset+o.length,B=o.readOID();switch(B){case"1.2.840.113549.1.1.1":return o._offset=p,"public"===d?function(e){e.readSequence(r.Ber.BitString),e.readByte(),e.readSequence();var t=c(e,"modulus"),a=c(e,"exponent"),n={type:"rsa",source:e.originalInput,parts:[{name:"e",data:a},{name:"n",data:t}]};return new i(n)}(o):function(t){t.readSequence(r.Ber.OctetString),t.readSequence();var a=c(t,"version");e.equal(a[0],0,"unknown RSA private key version");var n=c(t,"modulus"),i=c(t,"public exponent"),d=c(t,"private exponent"),f=c(t,"prime1"),o=c(t,"prime2"),p=c(t,"exponent1"),B=c(t,"exponent2"),s=c(t,"iqmp");return new u({type:"rsa",parts:[{name:"n",data:n},{name:"e",data:i},{name:"d",data:d},{name:"iqmp",data:s},{name:"p",data:f},{name:"q",data:o},{name:"dmodp",data:p},{name:"dmodq",data:B}]})}(o);case"1.2.840.10040.4.1":return"public"===d?function(e){e.readSequence();var t=c(e,"p"),a=c(e,"q"),n=c(e,"g");e.readSequence(r.Ber.BitString),e.readByte();var u=c(e,"y");return new i({type:"dsa",parts:[{name:"p",data:t},{name:"q",data:a},{name:"g",data:n},{name:"y",data:u}]})}(o):function(e){e.readSequence();var t=c(e,"p"),a=c(e,"q"),i=c(e,"g");e.readSequence(r.Ber.OctetString);var d=c(e,"x"),f=n.calculateDSAPublic(i,t,d);return new u({type:"dsa",parts:[{name:"p",data:t},{name:"q",data:a},{name:"g",data:i},{name:"y",data:f},{name:"x",data:d}]})}(o);case"1.2.840.10045.2.1":return"public"===d?function(a){var u=f(a);e.string(u,"a known elliptic curve");var d=a.readString(r.Ber.BitString,!0);d=n.ecNormalize(d);var c={type:"ecdsa",parts:[{name:"curve",data:t.from(u)},{name:"Q",data:d}]};return new i(c)}(o):function(a){var i=f(a);e.string(i,"a known elliptic curve"),a.readSequence(r.Ber.OctetString),a.readSequence();var d=c(a,"version");e.equal(d[0],1,"unknown version of ECDSA key");var o,p=a.readString(r.Ber.OctetString,!0);160==a.peek()&&(a.readSequence(160),a._offset+=a.length);161==a.peek()&&(a.readSequence(161),o=a.readString(r.Ber.BitString,!0),o=n.ecNormalize(o));if(void 0===o){var B=n.publicFromPrivateECDSA(i,p);o=B.part.Q.data}var s={type:"ecdsa",parts:[{name:"curve",data:t.from(i)},{name:"Q",data:o},{name:"d",data:p}]};return new u(s)}(o);case"1.3.101.112":return"public"===d?function(e){0===e.peek()&&e.readByte();var r=n.readBitString(e),t={type:"ed25519",parts:[{name:"A",data:n.zeroPadToLength(r,32)}]};return new i(t)}(o):function(e){0===e.peek()&&e.readByte();e.readSequence(r.Ber.OctetString);var t,a=e.readString(r.Ber.OctetString,!0);a=n.zeroPadToLength(a,32),e.peek()===r.Ber.BitString?(t=n.readBitString(e),t=n.zeroPadToLength(t,32)):t=n.calculateED25519Public(a);var i={type:"ed25519",parts:[{name:"A",data:n.zeroPadToLength(t,32)},{name:"k",data:n.zeroPadToLength(a,32)}]};return new u(i)}(o);case"1.3.101.110":return"public"===d?function(e){var r=n.readBitString(e),t={type:"curve25519",parts:[{name:"A",data:n.zeroPadToLength(r,32)}]};return new i(t)}(o):function(e){0===e.peek()&&e.readByte();e.readSequence(r.Ber.OctetString);var t=e.readString(r.Ber.OctetString,!0);t=n.zeroPadToLength(t,32);var a=n.calculateX25519Public(t),i={type:"curve25519",parts:[{name:"A",data:n.zeroPadToLength(a,32)},{name:"k",data:n.zeroPadToLength(t,32)}]};return new u(i)}(o);default:throw new Error("Unknown key type OID "+B)}},write:function(e,r){return d.write(e,r,"pkcs8")},writePkcs8:o,pkcs8ToBuffer:function(e){var t=new r.BerWriter;return o(t,e),t.buffer},readECDSACurve:f,writeECDSACurve:p};var e=require("assert-plus"),r=require("asn1"),t=require("safer-buffer").Buffer,a=require("../algs"),n=require("../utils"),i=require("../key"),u=require("../private-key"),d=require("./pem");function c(t,a){return e.strictEqual(t.peek(),r.Ber.Integer,a+" is not an Integer"),n.mpNormalize(t.readString(r.Ber.Integer,!0))}function f(i){var u,d,c,f,o;if(i.peek()===r.Ber.OID){var p=i.readOID();for(d=Object.keys(a.curves),c=0;c<d.length;++c)if(f=d[c],(o=a.curves[f]).pkcs8oid===p){u=f;break}}else{i.readSequence();var B=i.readString(r.Ber.Integer,!0);e.strictEqual(B[0],1,"ECDSA key not version 1");var s={};i.readSequence();var S=i.readOID();e.strictEqual(S,"1.2.840.10045.1.1","ECDSA key is not from a prime-field");var g=s.p=n.mpNormalize(i.readString(r.Ber.Integer,!0));s.size=8*g.length-n.countZeros(g),i.readSequence(),s.a=n.mpNormalize(i.readString(r.Ber.OctetString,!0)),s.b=n.mpNormalize(i.readString(r.Ber.OctetString,!0)),i.peek()===r.Ber.BitString&&(s.s=i.readString(r.Ber.BitString,!0)),s.G=i.readString(r.Ber.OctetString,!0),e.strictEqual(s.G[0],4,"uncompressed G is required"),s.n=n.mpNormalize(i.readString(r.Ber.Integer,!0)),s.h=n.mpNormalize(i.readString(r.Ber.Integer,!0)),e.strictEqual(s.h[0],1,"a cofactor=1 curve is required"),d=Object.keys(a.curves);var q=Object.keys(s);for(c=0;c<d.length;++c){f=d[c],o=a.curves[f];for(var v=!0,m=0;m<q.length;++m){var w=q[m];if(void 0!==o[w])if("object"==typeof o[w]&&void 0!==o[w].equals){if(!o[w].equals(s[w])){v=!1;break}}else if(t.isBuffer(o[w])){if(o[w].toString("binary")!==s[w].toString("binary")){v=!1;break}}else if(o[w]!==s[w]){v=!1;break}}if(v){u=f;break}}}return u}function o(e,a){if(e.startSequence(),u.isPrivateKey(a)){var i=t.from([0]);e.writeBuffer(i,r.Ber.Integer)}switch(e.startSequence(),a.type){case"rsa":e.writeOID("1.2.840.113549.1.1.1"),u.isPrivateKey(a)?function(e,a){a.writeNull(),a.endSequence(),a.startSequence(r.Ber.OctetString),a.startSequence();var i=t.from([0]);a.writeBuffer(i,r.Ber.Integer),a.writeBuffer(e.part.n.data,r.Ber.Integer),a.writeBuffer(e.part.e.data,r.Ber.Integer),a.writeBuffer(e.part.d.data,r.Ber.Integer),a.writeBuffer(e.part.p.data,r.Ber.Integer),a.writeBuffer(e.part.q.data,r.Ber.Integer),e.part.dmodp&&e.part.dmodq||n.addRSAMissing(e);a.writeBuffer(e.part.dmodp.data,r.Ber.Integer),a.writeBuffer(e.part.dmodq.data,r.Ber.Integer),a.writeBuffer(e.part.iqmp.data,r.Ber.Integer),a.endSequence(),a.endSequence()}(a,e):function(e,t){t.writeNull(),t.endSequence(),t.startSequence(r.Ber.BitString),t.writeByte(0),t.startSequence(),t.writeBuffer(e.part.n.data,r.Ber.Integer),t.writeBuffer(e.part.e.data,r.Ber.Integer),t.endSequence(),t.endSequence()}(a,e);break;case"dsa":e.writeOID("1.2.840.10040.4.1"),u.isPrivateKey(a)?function(e,t){t.startSequence(),t.writeBuffer(e.part.p.data,r.Ber.Integer),t.writeBuffer(e.part.q.data,r.Ber.Integer),t.writeBuffer(e.part.g.data,r.Ber.Integer),t.endSequence(),t.endSequence(),t.startSequence(r.Ber.OctetString),t.writeBuffer(e.part.x.data,r.Ber.Integer),t.endSequence()}(a,e):function(e,t){t.startSequence(),t.writeBuffer(e.part.p.data,r.Ber.Integer),t.writeBuffer(e.part.q.data,r.Ber.Integer),t.writeBuffer(e.part.g.data,r.Ber.Integer),t.endSequence(),t.endSequence(),t.startSequence(r.Ber.BitString),t.writeByte(0),t.writeBuffer(e.part.y.data,r.Ber.Integer),t.endSequence()}(a,e);break;case"ecdsa":e.writeOID("1.2.840.10045.2.1"),u.isPrivateKey(a)?function(e,a){p(e,a),a.endSequence(),a.startSequence(r.Ber.OctetString),a.startSequence();var i=t.from([1]);a.writeBuffer(i,r.Ber.Integer),a.writeBuffer(e.part.d.data,r.Ber.OctetString),a.startSequence(161);var u=n.ecNormalize(e.part.Q.data,!0);a.writeBuffer(u,r.Ber.BitString),a.endSequence(),a.endSequence(),a.endSequence()}(a,e):function(e,t){p(e,t),t.endSequence();var a=n.ecNormalize(e.part.Q.data,!0);t.writeBuffer(a,r.Ber.BitString)}(a,e);break;case"ed25519":if(e.writeOID("1.3.101.112"),u.isPrivateKey(a))throw new Error("Ed25519 private keys in pkcs8 format are not supported");(function(e,r){r.endSequence(),n.writeBitString(r,e.part.A.data)})(a,e);break;default:throw new Error("Unsupported key type: "+a.type)}e.endSequence()}function p(e,n){var i=a.curves[e.curve];if(i.pkcs8oid)n.writeOID(i.pkcs8oid);else{n.startSequence();var u=t.from([1]);n.writeBuffer(u,r.Ber.Integer),n.startSequence(),n.writeOID("1.2.840.10045.1.1"),n.writeBuffer(i.p,r.Ber.Integer),n.endSequence(),n.startSequence();var d=i.p;0===d[0]&&(d=d.slice(1)),n.writeBuffer(d,r.Ber.OctetString),n.writeBuffer(i.b,r.Ber.OctetString),n.writeBuffer(i.s,r.Ber.BitString),n.endSequence(),n.writeBuffer(i.G,r.Ber.OctetString),n.writeBuffer(i.n,r.Ber.Integer);var c=i.h;c||(c=t.from([1])),n.writeBuffer(c,r.Ber.Integer),n.endSequence()}}