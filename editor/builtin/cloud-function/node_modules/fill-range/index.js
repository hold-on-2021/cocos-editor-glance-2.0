"use strict";const r=require("util"),e=require("to-regex-range"),t=r=>null!==r&&"object"==typeof r&&!Array.isArray(r),n=r=>"number"==typeof r||"string"==typeof r&&""!==r,i=r=>Number.isInteger(+r),s=r=>{let e=`${r}`,t=-1;if("-"===e[0]&&(e=e.slice(1)),"0"===e)return!1;for(;"0"===e[++t];);return t>0},a=(r,e,t)=>{if(e>0){let t="-"===r[0]?"-":"";t&&(r=r.slice(1)),r=t+r.padStart(t?e-1:e,"0")}return!1===t?String(r):r},o=(r,e)=>{let t="-"===r[0]?"-":"";for(t&&(r=r.slice(1),e--);r.length<e;)r="0"+r;return t?"-"+r:r},u=(r,t,n,i)=>{if(n)return e(r,t,{wrap:!1,...i});let s=String.fromCharCode(r);return r===t?s:`[${s}-${String.fromCharCode(t)}]`},g=(r,t,n)=>{if(Array.isArray(r)){let e=!0===n.wrap,t=n.capture?"":"?:";return e?`(${t}${r.join("|")})`:r.join("|")}return e(r,t,n)},l=(...e)=>new RangeError("Invalid range arguments: "+r.inspect(...e)),f=(r,e,t)=>{if(!0===t.strictRanges)throw l([r,e]);return[]},p=(r,e,t=1,n={})=>{let i=Number(r),f=Number(e);if(!Number.isInteger(i)||!Number.isInteger(f)){if(!0===n.strictRanges)throw l([r,e]);return[]}0===i&&(i=0),0===f&&(f=0);let p=i>f,h=String(r),m=String(e),c=String(t);t=Math.max(Math.abs(t),1);let $=s(h)||s(m)||s(c),b=$?Math.max(h.length,m.length,c.length):0,x=!1===$&&!1===((r,e,t)=>"string"==typeof r||"string"==typeof e||!0===t.stringify)(r,e,n),y=n.transform||(r=>e=>!0===r?Number(e):String(e))(x);if(n.toRegex&&1===t)return u(o(r,b),o(e,b),!0,n);let v={negatives:[],positives:[]},w=r=>v[r<0?"negatives":"positives"].push(Math.abs(r)),d=[],R=0;for(;p?i>=f:i<=f;)!0===n.toRegex&&t>1?w(i):d.push(a(y(i,R),b,x)),i=p?i-t:i+t,R++;return!0===n.toRegex?t>1?((r,e)=>{r.negatives.sort((r,e)=>r<e?-1:r>e?1:0),r.positives.sort((r,e)=>r<e?-1:r>e?1:0);let t,n=e.capture?"":"?:",i="",s="";return r.positives.length&&(i=r.positives.join("|")),r.negatives.length&&(s=`-(${n}${r.negatives.join("|")})`),t=i&&s?`${i}|${s}`:i||s,e.wrap?`(${n}${t})`:t})(v,n):g(d,null,{wrap:!1,...n}):d},h=(r,e,s,a={})=>{if(null==e&&n(r))return[r];if(!n(r)||!n(e))return f(r,e,a);if("function"==typeof s)return h(r,e,1,{transform:s});if(t(s))return h(r,e,0,s);let o={...a};return!0===o.capture&&(o.wrap=!0),s=s||o.step||1,i(s)?i(r)&&i(e)?p(r,e,s,o):((r,e,t=1,n={})=>{if(!i(r)&&r.length>1||!i(e)&&e.length>1)return f(r,e,n);let s=n.transform||(r=>String.fromCharCode(r)),a=`${r}`.charCodeAt(0),o=`${e}`.charCodeAt(0),l=a>o,p=Math.min(a,o),h=Math.max(a,o);if(n.toRegex&&1===t)return u(p,h,!1,n);let m=[],c=0;for(;l?a>=o:a<=o;)m.push(s(a,c)),a=l?a-t:a+t,c++;return!0===n.toRegex?g(m,null,{wrap:!1,options:n}):m})(r,e,Math.max(Math.abs(s),1),o):null==s||t(s)?h(r,e,1,s):((r,e)=>{if(!0===e.strictRanges)throw new TypeError(`Expected step "${r}" to be a number`);return[]})(s,o)};module.exports=h;