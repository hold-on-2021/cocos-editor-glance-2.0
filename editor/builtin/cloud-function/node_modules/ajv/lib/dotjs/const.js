"use strict";module.exports=function(a,e,r){var t=" ",s=a.level,o=a.dataLevel,h=a.schema[e],l=a.schemaPath+a.util.getProperty(e),c=a.errSchemaPath+"/"+e,d=!a.opts.allErrors,m="data"+(o||""),v="valid"+s,u=a.opts.$data&&h&&h.$data;u?(t+=" var schema"+s+" = "+a.util.getData(h.$data,o,a.dataPathArr)+"; ","schema"+s):h,u||(t+=" var schema"+s+" = validate.schema"+l+";"),t+="var "+v+" = equal("+m+", schema"+s+"); if (!"+v+") {   ";var i=i||[];i.push(t),t="",!1!==a.createErrors?(t+=" { keyword: 'const' , dataPath: (dataPath || '') + "+a.errorPath+" , schemaPath: "+a.util.toQuotedString(c)+" , params: { allowedValue: schema"+s+" } ",!1!==a.opts.messages&&(t+=" , message: 'should be equal to constant' "),a.opts.verbose&&(t+=" , schema: validate.schema"+l+" , parentSchema: validate.schema"+a.schemaPath+" , data: "+m+" "),t+=" } "):t+=" {} ";var n=t;return t=i.pop(),!a.compositeRule&&d?a.async?t+=" throw new ValidationError(["+n+"]); ":t+=" validate.errors = ["+n+"]; return false; ":t+=" var err = "+n+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",t+=" }",d&&(t+=" else { "),t};