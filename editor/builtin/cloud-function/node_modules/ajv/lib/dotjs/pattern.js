"use strict";module.exports=function(a,e,t){var r,s=" ",o=a.level,h=a.dataLevel,l=a.schema[e],u=a.schemaPath+a.util.getProperty(e),d=a.errSchemaPath+"/"+e,i=!a.opts.allErrors,n="data"+(h||""),p=a.opts.$data&&l&&l.$data;p?(s+=" var schema"+o+" = "+a.util.getData(l.$data,h,a.dataPathArr)+"; ",r="schema"+o):r=l;var c=p?"(new RegExp("+r+"))":a.usePattern(l);s+="if ( ",p&&(s+=" ("+r+" !== undefined && typeof "+r+" != 'string') || "),s+=" !"+c+".test("+n+") ) {   ";var m=m||[];m.push(s),s="",!1!==a.createErrors?(s+=" { keyword: 'pattern' , dataPath: (dataPath || '') + "+a.errorPath+" , schemaPath: "+a.util.toQuotedString(d)+" , params: { pattern:  ",s+=p?""+r:""+a.util.toQuotedString(l),s+="  } ",!1!==a.opts.messages&&(s+=" , message: 'should match pattern \"",s+=p?"' + "+r+" + '":""+a.util.escapeQuotes(l),s+="\"' "),a.opts.verbose&&(s+=" , schema:  ",s+=p?"validate.schema"+u:""+a.util.toQuotedString(l),s+="         , parentSchema: validate.schema"+a.schemaPath+" , data: "+n+" "),s+=" } "):s+=" {} ";var v=s;return s=m.pop(),!a.compositeRule&&i?a.async?s+=" throw new ValidationError(["+v+"]); ":s+=" validate.errors = ["+v+"]; return false; ":s+=" var err = "+v+";  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ",s+="} ",i&&(s+=" else { "),s};