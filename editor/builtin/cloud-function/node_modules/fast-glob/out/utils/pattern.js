"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const t=require("path"),e=require("glob-parent"),r=require("micromatch"),n=require("picomatch"),s="**",o="\\",i=/[*?]|^!/,a=/\[.*]/,c=/(?:^|[^!*+?@])\(.*\|.*\)/,u=/[!*+?@]\(.*\)/,p=/{.*(?:,|\.\.).*}/;function x(t,e={}){return!f(t,e)}function f(t,e={}){return!(!1!==e.caseSensitiveMatch&&!t.includes(o))||(!!(i.test(t)||a.test(t)||c.test(t))||(!(!1===e.extglob||!u.test(t))||!(!1===e.braceExpansion||!p.test(t))))}function P(t){return t.startsWith("!")&&"("!==t[1]}function l(t){return!P(t)}function h(t){return t.endsWith("/"+s)}function g(t){return r.braces(t,{expand:!0,nodupes:!0})}function d(t,e){return r.makeRe(t,e)}exports.isStaticPattern=x,exports.isDynamicPattern=f,exports.convertToPositivePattern=function(t){return P(t)?t.slice(1):t},exports.convertToNegativePattern=function(t){return"!"+t},exports.isNegativePattern=P,exports.isPositivePattern=l,exports.getNegativePatterns=function(t){return t.filter(P)},exports.getPositivePatterns=function(t){return t.filter(l)},exports.getBaseDirectory=function(t){return e(t,{flipBackslashes:!1})},exports.hasGlobStar=function(t){return t.includes(s)},exports.endsWithSlashGlobStar=h,exports.isAffectDepthOfReadingPattern=function(e){const r=t.basename(e);return h(e)||x(r)},exports.expandPatternsWithBraceExpansion=function(t){return t.reduce((t,e)=>t.concat(g(e)),[])},exports.expandBraceExpansion=g,exports.getPatternParts=function(t,e){const r=n.scan(t,Object.assign(Object.assign({},e),{parts:!0}));return 0===r.parts.length?[t]:r.parts},exports.makeRe=d,exports.convertPatternsToRe=function(t,e){return t.map(t=>d(t,e))},exports.matchAny=function(t,e){return e.some(e=>e.test(t))};