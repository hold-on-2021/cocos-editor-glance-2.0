"use strict";const t=require("./constants"),e=require("./utils"),{MAX_LENGTH:u,POSIX_REGEX_SOURCE:o,REGEX_NON_SPECIAL_CHARS:n,REGEX_SPECIAL_CHARS_BACKREF:p,REPLACEMENTS:a}=t,s=(t,u)=>{if("function"==typeof u.expandRange)return u.expandRange(...t,u);t.sort();const o=`[${t.join("-")}]`;try{new RegExp(o)}catch(u){return t.map(t=>e.escapeRegex(t)).join("..")}return o},r=(t,e)=>`Missing ${t}: "${e}" - use "\\\\${e}" to match literal characters`,l=(l,i)=>{if("string"!=typeof l)throw new TypeError("Expected a string");l=a[l]||l;const c={...i},y="number"==typeof c.maxLength?Math.min(u,c.maxLength):u;let f=l.length;if(f>y)throw new SyntaxError(`Input length: ${f}, exceeds maximum allowed length: ${y}`);const g={type:"bos",value:"",output:c.prepend||""},v=[g],b=c.capture?"":"?:",h=e.isWindows(i),x=t.globChars(h),$=t.extglobChars(x),{DOT_LITERAL:d,PLUS_LITERAL:k,SLASH_LITERAL:S,ONE_CHAR:m,DOTS_SLASH:E,NO_DOT:_,NO_DOT_SLASH:L,NO_DOTS_SLASH:R,QMARK:w,QMARK_NO_DOT:A,STAR:O,START_ANCHOR:T}=x,N=t=>`(${b}(?:(?!${T}${t.dot?E:d}).)*?)`,C=c.dot?"":_,I=c.dot?w:A;let H=!0===c.bash?N(c):O;c.capture&&(H=`(${H})`),"boolean"==typeof c.noext&&(c.noextglob=c.noext);const D={input:l,index:-1,start:0,dot:!0===c.dot,consumed:"",output:"",prefix:"",backtrack:!1,negated:!1,brackets:0,braces:0,parens:0,quotes:0,globstar:!1,tokens:v};l=e.removePrefix(l,D),f=l.length;const q=[],B=[],M=[];let P,X=g;const G=()=>D.index===f-1,j=D.peek=((t=1)=>l[D.index+t]),K=D.advance=(()=>l[++D.index]),Q=()=>l.slice(D.index+1),U=(t="",e=0)=>{D.consumed+=t,D.index+=e},W=t=>{D.output+=null!=t.output?t.output:t.value,U(t.value)},F=()=>{let t=1;for(;"!"===j()&&("("!==j(2)||"?"===j(3));)K(),D.start++,t++;return t%2!=0&&(D.negated=!0,D.start++,!0)},z=t=>{D[t]++,M.push(t)},J=t=>{D[t]--,M.pop()},V=t=>{if("globstar"===X.type){const e=D.braces>0&&("comma"===t.type||"brace"===t.type),u=!0===t.extglob||q.length&&("pipe"===t.type||"paren"===t.type);"slash"===t.type||"paren"===t.type||e||u||(D.output=D.output.slice(0,-X.output.length),X.type="star",X.value="*",X.output=H,D.output+=X.output)}if(q.length&&"paren"!==t.type&&!$[t.value]&&(q[q.length-1].inner+=t.value),(t.value||t.output)&&W(t),X&&"text"===X.type&&"text"===t.type)return X.value+=t.value,X.output=(X.output||"")+t.value,void 0;t.prev=X,v.push(t),X=t},Y=(t,e)=>{const u={...$[e],conditions:1,inner:""};u.prev=X,u.parens=D.parens,u.output=D.output;const o=(c.capture?"(":"")+u.open;z("parens"),V({type:t,value:e,output:D.output?"":m}),V({type:"paren",extglob:!0,value:K(),output:o}),q.push(u)},Z=t=>{let e=t.close+(c.capture?")":"");if("negate"===t.type){let u=H;t.inner&&t.inner.length>1&&t.inner.includes("/")&&(u=N(c)),(u!==H||G()||/^\)+$/.test(Q()))&&(e=t.close=`)$))${u}`),"bos"===t.prev.type&&G()&&(D.negatedExtglob=!0)}V({type:"paren",extglob:!0,value:P,output:e}),J("parens")};if(!1!==c.fastpaths&&!/(^[*!]|[/()[\]{}"])/.test(l)){let t=!1,u=l.replace(p,(e,u,o,n,p,a)=>"\\"===n?(t=!0,e):"?"===n?u?u+n+(p?w.repeat(p.length):""):0===a?I+(p?w.repeat(p.length):""):w.repeat(o.length):"."===n?d.repeat(o.length):"*"===n?u?u+n+(p?H:""):H:u?e:`\\${e}`);return!0===t&&(u=!0===c.unescape?u.replace(/\\/g,""):u.replace(/\\+/g,t=>t.length%2==0?"\\\\":t?"\\":"")),u===l&&!0===c.contains?(D.output=l,D):(D.output=e.wrapOutput(u,D,i),D)}for(;!G();){if("\0"===(P=K()))continue;if("\\"===P){const t=j();if("/"===t&&!0!==c.bash)continue;if("."===t||";"===t)continue;if(!t){V({type:"text",value:P+="\\"});continue}const e=/^\\+/.exec(Q());let u=0;if(e&&e[0].length>2&&(u=e[0].length,D.index+=u,u%2!=0&&(P+="\\")),!0===c.unescape?P=K()||"":P+=K()||"",0===D.brackets){V({type:"text",value:P});continue}}if(D.brackets>0&&("]"!==P||"["===X.value||"[^"===X.value)){if(!1!==c.posix&&":"===P){const t=X.value.slice(1);if(t.includes("[")&&(X.posix=!0,t.includes(":"))){const t=X.value.lastIndexOf("["),e=X.value.slice(0,t),u=X.value.slice(t+2),n=o[u];if(n){X.value=e+n,D.backtrack=!0,K(),g.output||1!==v.indexOf(X)||(g.output=m);continue}}}("["===P&&":"!==j()||"-"===P&&"]"===j())&&(P=`\\${P}`),"]"!==P||"["!==X.value&&"[^"!==X.value||(P=`\\${P}`),!0===c.posix&&"!"===P&&"["===X.value&&(P="^"),X.value+=P,W({value:P});continue}if(1===D.quotes&&'"'!==P){P=e.escapeRegex(P),X.value+=P,W({value:P});continue}if('"'===P){D.quotes=1===D.quotes?0:1,!0===c.keepQuotes&&V({type:"text",value:P});continue}if("("===P){z("parens"),V({type:"paren",value:P});continue}if(")"===P){if(0===D.parens&&!0===c.strictBrackets)throw new SyntaxError(r("opening","("));const t=q[q.length-1];if(t&&D.parens===t.parens+1){Z(q.pop());continue}V({type:"paren",value:P,output:D.parens?")":"\\)"}),J("parens");continue}if("["===P){if(!0!==c.nobracket&&Q().includes("]"))z("brackets");else{if(!0!==c.nobracket&&!0===c.strictBrackets)throw new SyntaxError(r("closing","]"));P=`\\${P}`}V({type:"bracket",value:P});continue}if("]"===P){if(!0===c.nobracket||X&&"bracket"===X.type&&1===X.value.length){V({type:"text",value:P,output:`\\${P}`});continue}if(0===D.brackets){if(!0===c.strictBrackets)throw new SyntaxError(r("opening","["));V({type:"text",value:P,output:`\\${P}`});continue}J("brackets");const t=X.value.slice(1);if(!0===X.posix||"^"!==t[0]||t.includes("/")||(P=`/${P}`),X.value+=P,W({value:P}),!1===c.literalBrackets||e.hasRegexChars(t))continue;const u=e.escapeRegex(X.value);if(D.output=D.output.slice(0,-X.value.length),!0===c.literalBrackets){D.output+=u,X.value=u;continue}X.value=`(${b}${u}|${X.value})`,D.output+=X.value;continue}if("{"===P&&!0!==c.nobrace){z("braces");const t={type:"brace",value:P,output:"(",outputIndex:D.output.length,tokensIndex:D.tokens.length};B.push(t),V(t);continue}if("}"===P){const t=B[B.length-1];if(!0===c.nobrace||!t){V({type:"text",value:P,output:P});continue}let e=")";if(!0===t.dots){const t=v.slice(),u=[];for(let e=t.length-1;e>=0&&(v.pop(),"brace"!==t[e].type);e--)"dots"!==t[e].type&&u.unshift(t[e].value);e=s(u,c),D.backtrack=!0}if(!0!==t.comma&&!0!==t.dots){const u=D.output.slice(0,t.outputIndex),o=D.tokens.slice(t.tokensIndex);t.value=t.output="\\{",P=e="\\}",D.output=u;for(const t of o)D.output+=t.output||t.value}V({type:"brace",value:P,output:e}),J("braces"),B.pop();continue}if("|"===P){q.length>0&&q[q.length-1].conditions++,V({type:"text",value:P});continue}if(","===P){let t=P;const e=B[B.length-1];e&&"braces"===M[M.length-1]&&(e.comma=!0,t="|"),V({type:"comma",value:P,output:t});continue}if("/"===P){if("dot"===X.type&&D.index===D.start+1){D.start=D.index+1,D.consumed="",D.output="",v.pop(),X=g;continue}V({type:"slash",value:P,output:S});continue}if("."===P){if(D.braces>0&&"dot"===X.type){"."===X.value&&(X.output=d);const t=B[B.length-1];X.type="dots",X.output+=P,X.value+=P,t.dots=!0;continue}if(D.braces+D.parens===0&&"bos"!==X.type&&"slash"!==X.type){V({type:"text",value:P,output:d});continue}V({type:"dot",value:P,output:d});continue}if("?"===P){if(!(X&&"("===X.value)&&!0!==c.noextglob&&"("===j()&&"?"!==j(2)){Y("qmark",P);continue}if(X&&"paren"===X.type){const t=j();let u=P;if("<"===t&&!e.supportsLookbehinds())throw new Error("Node.js v10 or higher is required for regex lookbehinds");("("===X.value&&!/[!=<:]/.test(t)||"<"===t&&!/<([!=]|\w+>)/.test(Q()))&&(u=`\\${P}`),V({type:"text",value:P,output:u});continue}if(!0!==c.dot&&("slash"===X.type||"bos"===X.type)){V({type:"qmark",value:P,output:A});continue}V({type:"qmark",value:P,output:w});continue}if("!"===P){if(!0!==c.noextglob&&"("===j()&&("?"!==j(2)||!/[!=<:]/.test(j(3)))){Y("negate",P);continue}if(!0!==c.nonegate&&0===D.index){F();continue}}if("+"===P){if(!0!==c.noextglob&&"("===j()&&"?"!==j(2)){Y("plus",P);continue}if(X&&"("===X.value||!1===c.regex){V({type:"plus",value:P,output:k});continue}if(X&&("bracket"===X.type||"paren"===X.type||"brace"===X.type)||D.parens>0){V({type:"plus",value:P});continue}V({type:"plus",value:k});continue}if("@"===P){if(!0!==c.noextglob&&"("===j()&&"?"!==j(2)){V({type:"at",extglob:!0,value:P,output:""});continue}V({type:"text",value:P});continue}if("*"!==P){"$"!==P&&"^"!==P||(P=`\\${P}`);const t=n.exec(Q());t&&(P+=t[0],D.index+=t[0].length),V({type:"text",value:P});continue}if(X&&("globstar"===X.type||!0===X.star)){X.type="star",X.star=!0,X.value+=P,X.output=H,D.backtrack=!0,D.globstar=!0,U(P);continue}let t=Q();if(!0!==c.noextglob&&/^\([^?]/.test(t)){Y("star",P);continue}if("star"===X.type){if(!0===c.noglobstar){U(P);continue}const e=X.prev,u=e.prev,o="slash"===e.type||"bos"===e.type,n=u&&("star"===u.type||"globstar"===u.type);if(!0===c.bash&&(!o||t[0]&&"/"!==t[0])){V({type:"star",value:P,output:""});continue}const p=D.braces>0&&("comma"===e.type||"brace"===e.type),a=q.length&&("pipe"===e.type||"paren"===e.type);if(!o&&"paren"!==e.type&&!p&&!a){V({type:"star",value:P,output:""});continue}for(;"/**"===t.slice(0,3);){const e=l[D.index+4];if(e&&"/"!==e)break;t=t.slice(3),U("/**",3)}if("bos"===e.type&&G()){X.type="globstar",X.value+=P,X.output=N(c),D.output=X.output,D.globstar=!0,U(P);continue}if("slash"===e.type&&"bos"!==e.prev.type&&!n&&G()){D.output=D.output.slice(0,-(e.output+X.output).length),e.output=`(?:${e.output}`,X.type="globstar",X.output=N(c)+(c.strictSlashes?")":"|$)"),X.value+=P,D.globstar=!0,D.output+=e.output+X.output,U(P);continue}if("slash"===e.type&&"bos"!==e.prev.type&&"/"===t[0]){const u=void 0!==t[1]?"|$":"";D.output=D.output.slice(0,-(e.output+X.output).length),e.output=`(?:${e.output}`,X.type="globstar",X.output=`${N(c)}${S}|${S}${u})`,X.value+=P,D.output+=e.output+X.output,D.globstar=!0,U(P+K()),V({type:"slash",value:"/",output:""});continue}if("bos"===e.type&&"/"===t[0]){X.type="globstar",X.value+=P,X.output=`(?:^|${S}|${N(c)}${S})`,D.output=X.output,D.globstar=!0,U(P+K()),V({type:"slash",value:"/",output:""});continue}D.output=D.output.slice(0,-X.output.length),X.type="globstar",X.output=N(c),X.value+=P,D.output+=X.output,D.globstar=!0,U(P);continue}const u={type:"star",value:P,output:H};!0!==c.bash?!X||"bracket"!==X.type&&"paren"!==X.type||!0!==c.regex?(D.index!==D.start&&"slash"!==X.type&&"dot"!==X.type||("dot"===X.type?(D.output+=L,X.output+=L):!0===c.dot?(D.output+=R,X.output+=R):(D.output+=C,X.output+=C),"*"!==j()&&(D.output+=m,X.output+=m)),V(u)):(u.output=P,V(u)):(u.output=".*?","bos"!==X.type&&"slash"!==X.type||(u.output=C+u.output),V(u))}for(;D.brackets>0;){if(!0===c.strictBrackets)throw new SyntaxError(r("closing","]"));D.output=e.escapeLast(D.output,"["),J("brackets")}for(;D.parens>0;){if(!0===c.strictBrackets)throw new SyntaxError(r("closing",")"));D.output=e.escapeLast(D.output,"("),J("parens")}for(;D.braces>0;){if(!0===c.strictBrackets)throw new SyntaxError(r("closing","}"));D.output=e.escapeLast(D.output,"{"),J("braces")}if(!0===c.strictSlashes||"star"!==X.type&&"bracket"!==X.type||V({type:"maybe_slash",value:"",output:`${S}?`}),!0===D.backtrack){D.output="";for(const t of D.tokens)D.output+=null!=t.output?t.output:t.value,t.suffix&&(D.output+=t.suffix)}return D};l.fastpaths=((o,n)=>{const p={...n},s="number"==typeof p.maxLength?Math.min(u,p.maxLength):u,r=o.length;if(r>s)throw new SyntaxError(`Input length: ${r}, exceeds maximum allowed length: ${s}`);o=a[o]||o;const l=e.isWindows(n),{DOT_LITERAL:i,SLASH_LITERAL:c,ONE_CHAR:y,DOTS_SLASH:f,NO_DOT:g,NO_DOTS:v,NO_DOTS_SLASH:b,STAR:h,START_ANCHOR:x}=t.globChars(l),$=p.dot?v:g,d=p.dot?b:g,k=p.capture?"":"?:";let S=!0===p.bash?".*?":h;p.capture&&(S=`(${S})`);const m=t=>!0===t.noglobstar?S:`(${k}(?:(?!${x}${t.dot?f:i}).)*?)`,E=t=>{switch(t){case"*":return`${$}${y}${S}`;case".*":return`${i}${y}${S}`;case"*.*":return`${$}${S}${i}${y}${S}`;case"*/*":return`${$}${S}${c}${y}${d}${S}`;case"**":return $+m(p);case"**/*":return`(?:${$}${m(p)}${c})?${d}${y}${S}`;case"**/*.*":return`(?:${$}${m(p)}${c})?${d}${S}${i}${y}${S}`;case"**/.*":return`(?:${$}${m(p)}${c})?${i}${y}${S}`;default:{const e=/^(.*?)\.(\w+)$/.exec(t);if(!e)return;const u=E(e[1]);if(!u)return;return u+i+e[2]}}},_=e.removePrefix(o,{negated:!1,prefix:""});let L=E(_);return L&&!0!==p.strictSlashes&&(L+=`${c}?`),L}),module.exports=l;