var e=require("zlib"),i=require("tar-stream"),t=require("archiver-utils"),r=function(n){if(!(this instanceof r))return new r(n);"object"!=typeof(n=this.options=t.defaults(n,{gzip:!1})).gzipOptions&&(n.gzipOptions={}),this.supports={directory:!0,symlink:!0},this.engine=i.pack(n),this.compressor=!1,n.gzip&&(this.compressor=e.createGzip(n.gzipOptions),this.compressor.on("error",this._onCompressorError.bind(this)))};r.prototype._onCompressorError=function(e){this.engine.emit("error",e)},r.prototype.append=function(e,i,r){var n=this;function s(e,t){if(e)return r(e),void 0;n.engine.entry(i,t,function(e){r(e,i)})}if(i.mtime=i.date,"buffer"===i.sourceType)s(null,e);else if("stream"===i.sourceType&&i.stats){i.size=i.stats.size;var o=n.engine.entry(i,function(e){r(e,i)});e.pipe(o)}else"stream"===i.sourceType&&t.collectStream(e,s)},r.prototype.finalize=function(){this.engine.finalize()},r.prototype.on=function(){return this.engine.on.apply(this.engine,arguments)},r.prototype.pipe=function(e,i){return this.compressor?this.engine.pipe.apply(this.engine,[this.compressor]).pipe(e,i):this.engine.pipe.apply(this.engine,arguments)},r.prototype.unpipe=function(){return this.compressor?this.compressor.unpipe.apply(this.compressor,arguments):this.engine.unpipe.apply(this.engine,arguments)},module.exports=r;