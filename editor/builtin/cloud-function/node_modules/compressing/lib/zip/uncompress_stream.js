"use strict";const e=require("yauzl"),i=require("stream"),t=require("../base_write_stream"),r=require("../utils");let s;const n=Symbol("ZipUncompressStream#yauzlCallback"),o=Symbol("ZipUncompressStream#stripName"),a={lazyEntries:!0,decodeStrings:!1};module.exports=class extends t{constructor(i){super(i=i||{}),this._chunks=[],this._strip=Number(i.strip)||0,this._zipFileNameEncoding=i.zipFileNameEncoding||"utf8","utf-8"===this._zipFileNameEncoding&&(this._zipFileNameEncoding="utf8"),this[n]=this[n].bind(this);const t=r.sourceType(i.source),s=this._yauzlOpts=Object.assign({},a,i.yauzl);return"file"===t?(e.open(i.source,s,this[n]),void 0):"buffer"===t?(e.fromBuffer(i.source,s,this[n]),void 0):"stream"===t?(r.streamToBuffer(i.source).then(i=>e.fromBuffer(i,s,this[n])).catch(e=>this.emit("error",e)),void 0):(this.on("pipe",i=>{i.unpipe(i),r.streamToBuffer(i).then(i=>{this._chunks.push(i),i=Buffer.concat(this._chunks),e.fromBuffer(i,s,this[n])}).catch(e=>this.emit("error",e))}),void 0)}_write(e){this._chunks.push(e)}[n](e,t){if(e)return this.emit("error",e);function r(){t.readEntry()}t.readEntry(),t.on("entry",e=>{Buffer.isBuffer(e.fileName)&&("utf8"===this._zipFileNameEncoding?e.fileName=e.fileName.toString():(s||(s=require("iconv-lite")),e.fileName=s.decode(e.fileName,this._zipFileNameEncoding)));const n=/\/$/.test(e.fileName)?"directory":"file",a={name:e.fileName=this[o](e.fileName,n),type:n,yauzl:e};if("file"===n)t.openReadStream(e,(e,i)=>{if(e)return this.emit("error",e);this.emit("entry",a,i,r)});else{const e=new i.Readable({read(){}});this.emit("entry",a,e,r),setImmediate(()=>e.emit("end"))}}).on("end",()=>this.emit("finish")).on("error",e=>this.emit("error",e))}[o](e,i){return r.stripFileName(this._strip,e,i)}};