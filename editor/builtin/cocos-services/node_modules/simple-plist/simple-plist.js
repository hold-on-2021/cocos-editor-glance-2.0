(function(){var r,e,t,i;e=require("bplist-parser"),r=require("bplist-creator"),i=require("plist"),t=require("fs"),exports.plist=i,exports.bplistCreator=r,exports.bplistParser=e,exports.readFileSync=function(r){var e;return 0===(e=t.readFileSync(r)).length?{}:exports.parse(e,r)},exports.readFile=function(r,e){return t.readFile(r,function(t,i){var n;if(t)return e(t);try{return n=exports.parse(i,r),e(null,n)}catch(r){return e(t=r)}})},exports.writeFileSync=function(r,e,n){var o;return o=i.build(e),t.writeFileSync(r,o,n)},exports.writeFile=function(r,e,n,o){var l;return 3===arguments.length&&"function"==typeof n&&(o=n,n=void 0),l=i.build(e),t.writeFile(r,l,n,o)},exports.writeBinaryFileSync=function(e,i,n){var o;return o=r(i),t.writeFileSync(e,o,n)},exports.writeBinaryFile=function(e,i,n,o){var l;return 3===arguments.length&&"function"==typeof n&&(o=n,n=void 0),l=r(i),t.writeFile(e,l,n,o)},exports.stringify=function(r){return i.build(r)},exports.parse=function(r,t){var n,o;n=r[0];try{if(60===n||"<"===n)o=i.parse(r.toString());else{if(98!==n)throw null!=t?new Error("Unable to determine format for '"+t+"'"):new Error("Unable to determine format for plist aStringOrBuffer");o=e.parseBuffer(r)[0]}}catch(r){throw r,new Error(t+" has errors")}return o}}).call(this);