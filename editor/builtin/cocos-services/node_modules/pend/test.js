var n=require("assert"),t=require("./"),o=[{name:"basic",fn:function(o){var e=new t,i=[];e.go(function(n){i.push(1),setTimeout(function(){i.push(3),n()},500)}),e.go(function(n){i.push(2),setTimeout(function(){i.push(4),n()},1e3)}),e.wait(function(t){n.deepEqual(i,[1,2,3,4]),o()}),n.deepEqual(i,[1,2])}},{name:"max",fn:function(o){var e=new t,i=[];e.max=2,e.go(function(n){i.push("a"),setTimeout(function(){i.push(1),n()},500)}),e.go(function(n){i.push("b"),setTimeout(function(){i.push(1),n()},500)}),e.go(function(n){i.push("c"),setTimeout(function(){i.push(2),n()},100)}),e.wait(function(t){n.deepEqual(i,["a","b",1,"c",1,2]),o()}),n.deepEqual(i,["a","b"])}},{name:"callback twice",fn:function(o){var e=new t;e.go(function(n){setTimeout(n,100)}),e.go(function(t){t(),n.throws(t,/callback called twice/)}),e.wait(o)}},{name:"calling wait twice",fn:function(n){var o=new t;o.go(function(n){setTimeout(n,100)}),o.wait(function(){o.go(function(n){setTimeout(n,50)}),o.go(function(n){setTimeout(n,10)}),o.go(function(n){setTimeout(n,20)}),o.wait(n)})}},{name:"hold()",fn:function(n){var o=new t;setTimeout(o.hold(),100),o.go(function(n){n()}),o.wait(n)}}],e=o.length;(function n(){var t=o.shift();if(!t)return console.log(e+" tests passed."),void 0;process.stdout.write(t.name+"...");t.fn(function(){process.stdout.write("OK\n"),n()})})();