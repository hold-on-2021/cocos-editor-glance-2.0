"use strict";const e=require("path"),r=require("yazl"),s=require("assert"),t=require("stream"),a=require("../utils"),i=require("get-ready");class o extends t.Transform{constructor(i){super(i);const o=a.sourceType(i.source),u=new r.ZipFile,h=u.outputStream;if(h.on("data",e=>this.push(e)),h.on("end",()=>this.ready(!0)),u.on("error",e=>this.emit("error",e)),"file"!==o&&s(i.relativePath,"opts.relativePath is required when compressing a buffer, or a stream"),o&&this.end(),"file"===o)u.addFile(i.source,i.relativePath||e.basename(i.source),i.yazl);else if("buffer"===o)u.addBuffer(i.source,i.relativePath,i.yazl);else if("stream"===o)u.addReadStream(i.source,i.relativePath,i.yazl);else{const e=this._passThrough=new t.PassThrough;this.on("finish",()=>e.end()),u.addReadStream(e,i.relativePath,i.yazl)}u.end(i.yazl)}_transform(e,r,s){this._passThrough&&this._passThrough.write(e,r,s)}_flush(e){this.ready(e)}}i.mixin(o.prototype),module.exports=o;