"use strict";let e=require("./engine-interface");const t=Editor.require("packages://scene/panel/tools/camera"),r=require("../../3d/elements/utils/controller-shape-collider");let o=require("../external").GeometryUtils.aabb,n=cc.gfx;function i(e,t){let r=e.getComponent(cc.MeshRenderer);if(r){let e=r.getMaterial(0);e&&e.setProperty("diffuseColor",t)}}let s={};function c(e){if(!s[e]){let t=cc.AssetLibrary.getBuiltin("effect",e);s[e]=cc.Material.create(t)}return cc.MaterialVariant.create(s[e])}let a={ORTHO:0,PERSPECTIVE:1};module.exports=new class extends e{constructor(){super(),this.gfx=n,this.ProjectionType=a}create3DNode(e){let t=new cc.Node(e);return t.is3DNode=!0,t._objFlags|=cc.Object.Flags.DontSave|cc.Object.Flags.HideInHierarchy,t}createMesh(e){let t=new cc.Mesh,r=[{name:n.ATTR_POSITION,type:n.ATTR_TYPE_FLOAT32,num:3}];e.normals&&r.push({name:n.ATTR_NORMAL,type:n.ATTR_TYPE_FLOAT32,num:3});let o=new n.VertexFormat(r);return t.init(o,e.positions.length,!0),t.setVertices(n.ATTR_POSITION,e.positions),e.normals&&t.setVertices(n.ATTR_NORMAL,e.normals),t.setIndices(e.indices),e.minPos&&(t._minPos=e.minPos),e.maxPos&&(t._maxPos=e.maxPos),void 0!==e.primitiveType&&t.setPrimitiveType(e.primitiveType),t}addMeshToNode(e,t,r={}){let o=e.addComponent(cc.MeshRenderer);o.mesh=t;let i=c("__builtin-editor-gizmo-unlit");r.unlit?i.effect&&i.effect.setDepth(!1):t.subMeshes[0]._primitiveType<n.PT_TRIANGLES?r.noDepthTestForLines?i.effect&&i.effect.setDepth(!1):i=c("__builtin-editor-gizmo-line"):i=c("__builtin-editor-gizmo"),i&&i.effect&&r.cullMode&&i.effect.setCullMode(r.cullMode),o.setMaterial(0,i)}setMeshColor(e,t){e.color=t;let r=t.clone();r.a=e.opacity,i(e,r)}getMeshColor(e){return e.color}setNodeOpacity(e,t){e.opacity=t;let r=e.color;r.a=t,i(e,r)}getNodeOpacity(e){return e.opacity}getRaycastResults(e,o,i){let s=t._camera.getRay(cc.v3(o,i,1)),c=cc.geomUtils.intersect.raycast(e,s,(e,t,o)=>{let i=t.getComponent(r);if(i&&i.isDetectMesh){let r=t.getComponent(cc.MeshRenderer),o=r.mesh._subMeshes;if(r&&r.mesh&&o&&o[0]._primitiveType===n.PT_TRIANGLES)return cc.geomUtils.intersect.rayMesh(e,r.mesh)}return o},function(e){return null!=e.getComponent(cc.MeshRenderer)&&!1!==e.active});return c.ray=s,c}getModel(e){return e.getComponent(cc.MeshRenderer)}updateVBAttr(e,t,r){e.setVertices(t,r)}getBoudingBox(e){let t=null;if(e instanceof cc.MeshRenderer){let r=e.mesh;r&&(t=o.fromPoints(o.create(),r._minPos,r._maxPos))}else console.error("target is not a cc.MeshRenderer");return t}getRootBoneNode(e){let t=null;if(e instanceof cc.SkinnedMeshRenderer){let r=e._joints;r&&r.length>0&&(t=r[0])}else console.error("target is not a cc.SkinnedMeshRenderer");return t}getRootBindPose(e){let t=null;if(e instanceof cc.SkinnedMeshRenderer){let r=e.skeleton;r&&(t=r.bindposes[0])}else console.error("target is not a cc.SkinnedMeshRenderer");return t}getCameraData(e){let t=null;if(e instanceof cc.Camera){t={},e.ortho?t.projection=a.ORTHO:t.projection=a.PERSPECTIVE;let r=cc.engine.getDesignResolutionSize(),o=e._camera;t.orthoHeight=o.getOrthoHeight(),t.fov=180*o.getFov()/Math.PI,t.aspect=r.width/r.height,t.near=e.nearClip,t.far=e.farClip}else console.error("target is not a cc.Camera");return t}setCameraData(e,t){e instanceof cc.Camera?(t.fov&&(e.fov=t.fov),t.far&&(e.farClip=t.far),t.orthoHeight&&(e.orthoSize=t.orthoHeight)):console.error("target is not a cc.Camera")}getLightData(e){let t=null;return e instanceof cc.Light?((t={}).type=e.type,t.range=e.range,t.spotAngle=e.spotAngle):console.error("target is not a cc.Light"),t}setLightData(e,t){e instanceof cc.Light?(t.range&&(e.range=t.range),t.spotAngle&&(e.spotAngle=t.spotAngle)):console.error("target is not a cc.Light")}};