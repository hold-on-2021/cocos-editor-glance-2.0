"use strict";const e=require("fire-path"),t=require("fire-fs"),s=require("plist"),i=require("./native-asset"),r=require("./sprite-frame"),a=require(Editor.url("app://editor/share/sharp"));module.exports=class extends i{constructor(e){super(e),this.type=null,this.wrapMode="clamp",this.filterMode="bilinear",this.premultiplyAlpha=!1,this.genMipmaps=!1,this.packable=!0,this.width=0,this.height=0,this.platformSettings={}}static defaultType(){return"texture"}static version(){return"2.3.4"}deserialize(e){super.deserialize(e);let t={};for(let s in e.subMetas){let i=e.subMetas[s],a=new r(this._assetdb);a.deserialize(i),t[s]=a}this.updateSubMetas(t)}dests(){let e=super.dests();if("sprite"===this.type)for(let t in this.__subMetas__){let s=this.__subMetas__[t].uuid;e.push(this._assetdb._uuidToImportPathNoExt(s)+".json")}return e}createAsset(){let e=new cc.Texture2D,t=cc.Texture2D.WrapMode;switch(this.wrapMode){case"clamp":e.setWrapMode(t.CLAMP_TO_EDGE,t.CLAMP_TO_EDGE);break;case"repeat":e.setWrapMode(t.REPEAT,t.REPEAT)}let s=cc.Texture2D.Filter;switch(this.filterMode){case"point":e.setFilters(s.NEAREST,s.NEAREST);break;case"bilinear":case"trilinear":e.setFilters(s.LINEAR,s.LINEAR)}return e.setPremultiplyAlpha(this.premultiplyAlpha),e.genMipmaps=this.genMipmaps,e.packable=this.packable,e}import(i,r){if(null===this.type)try{let r=e.basename(i),a=e.basenameNoExt(i),p=s.parse(t.readFileSync(e.join(e.dirname(i),a+".plist"),"utf8")),h=p.metadata.realTextureFileName||p.metadata.textureFileName;this.type=h===r?"raw":"sprite"}catch(e){this.type="sprite"}super.import(i,t=>{if(t)return r(t);if("raw"===this.type)this.updateSubMetas({});else if("sprite"===this.type){const t=Editor.metas["sprite-frame"];let s=e.basenameNoExt(i),r=this.getSubMetas(),a=Object.keys(r),p=null;a.length&&(p=r[a[0]]),p||(p=new t(this._assetdb)),p.rawTextureUuid=this.uuid,r={[s]:p},this.updateSubMetas(r)}a(i).metadata().then(e=>{this.width=e.width,this.height=e.height,r()})})}};