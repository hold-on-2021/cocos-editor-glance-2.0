"use strict";const e=require("../../@base/electron-base-ipc"),t=process.send?require("@editor/user/dist/platform/child"):require("@editor/user"),{EventEmitter:o}=require("events"),{shell:r,app:i}=require("electron"),a=require("url"),n=require("md5"),s=require("@editor/user/dist/utils/network");let l=Editor.Profile.load("global://user_token.json");const c="https://test-creator-api.cocos.com/",u="https://creator-api.cocos.com/";let d="",g=async function(e){let o=await t.getData(),r=module.exports.enable(),i=o.nickname||d,a=`${Editor.T("SHARED.help")}/${Editor.T("MAIN_MENU.account.none")}`,n=`${Editor.T("SHARED.help")}/${Editor.T("MAIN_MENU.account.logged_user",{username:i})}`,s=`${Editor.T("SHARED.help")}/${Editor.T("MAIN_MENU.account.logout")}`;d=o.nickname,Editor.MainMenu.exists(a)&&Editor.MainMenu.remove(a),Editor.MainMenu.exists(n)&&Editor.MainMenu.remove(n),Editor.MainMenu.exists(s)&&Editor.MainMenu.remove(s),e?(Editor.MainMenu.add(Editor.T("SHARED.help"),{label:Editor.T("MAIN_MENU.account.logged_user",{username:i}),enabled:r,visible:!!i&&r}),Editor.MainMenu.add(Editor.T("SHARED.help"),{label:Editor.T("MAIN_MENU.account.logout"),click(){module.exports.logout()},enabled:r})):Editor.MainMenu.add(Editor.T("SHARED.help"),{label:Editor.T("MAIN_MENU.account.none"),enabled:!1})};!process.send&&t.on("info-update",()=>{l.clear(),l.set(null,t.getData()),l.save()});let p=module.exports=new class extends o{constructor(){super(),this._enable=!0,this._preUserId=null,t.setData&&t.setData(l.get(null)),this.isLoggedIn()}enable(t){return void 0!==t&&(this._enable=!!t,e.broadcast("creator-lib-user:flag","_enable",this._enable)),this._enable}async isLoggedIn(e){const o=await t.isLoggedIn();return g(o),o}async login(e,o){return await t.login(e,o)}async logout(){return await t.logout()}async getUserToken(){return await t.getUserToken()}async getSessionCode(e,o){return o&&Editor.warn("'getSessionCode' returns a standard 'promise' , please use 'await' to wait for the data"),await t.getSessionCode(e)}async getUserData(){return await t.getData()}async redirect(e){e=`https://creator-api.cocos.com/api/account/client_signin?session_id=${(await t.getData()).session_id}&redirect_url=${e}`,r.openExternal(e)}async getUserId(){return(await t.getData()).cocos_uid}getCocosServerURL(e){return a.resolve(Editor.dev?c:u,e)}async getSessionToken(e,t){const o=this.getCocosServerURL("api/session/token");let r={session_code:(await this.getSessionCode(e)).session_code,ip:"127.0.0.1",plugin_id:e,client_type:1};return r=this.signParam(r,e,t),await s.sendPostRequest(o,r)}signParam(e,t,o){e.plugin_id=t;let r={};Object.keys(e).sort().forEach(t=>{r[t]=e[t]});let i="";for(let e in r)i+=`${e}=${encodeURIComponent(r[e])}&`;return i+=o,e.sign=n(i),e}};t.on("login",()=>{p.emit("login"),e.broadcast("creator-lib-user:emit","login"),g(!0)}),t.on("logout",()=>{p.emit("logout"),e.broadcast("creator-lib-user:emit","logout"),g(!1)}),e.on("creator-libs-user:call",async(e,t,...o)=>{let r,i=p[t];try{r=await i.call(p,...o)}catch(t){return e.reply(t.message,null)}e.reply(null,r)}),e.on("creator-lib-user:query",(e,t)=>module.exports[t]),t.on("login",()=>{module.exports.emit("login"),e.broadcast("creator-lib-user:emit","login")}),t.on("waiting",()=>{module.exports.emit("waiting"),e.broadcast("creator-lib-user:emit","waiting")}),t.on("logout",()=>{module.exports.emit("logout"),e.broadcast("creator-lib-user:emit","logout")}),t.on("exception",t=>{module.exports.emit("exception",t),e.broadcast("creator-lib-user:emit","exception",t)});